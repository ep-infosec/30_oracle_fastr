# Specify output filters for R package testing
# 
# Format (EBNF, sed-like action syntax): 
# filter = pkg_pattern '=>' action .
# pkg_pattern = <REGEX>.
# action = command '/' string ['/' string ].
# command = 'd' | 'D' ['-N'] ['+N'] | 'r' | 'R' | 's'
# string = <unquoted string, slashed must be escaped with backslash>
# N = positive number
# 
# Command description:
#   d      delete exact match of the specified string (i.e. replace by empty string)
#   D      delete line containing the specified string
#   r      replace exact match of the first argument by the second argument
#   R      replace line containing the first argument by the second argument
#   D+3-1  delete line containing the specified string and 1 preceding and 3 following lines
#   s      substitute match of the regular expression with given string (use Python regex syntax)
#
# NOTES:
# The definition order of the filters (in this file) matters. 
# They will be applied in order.
# They will be applied to the outputs of both GNU R and FastR
#


# for all packages: replace 'fastr' by '<engine>'
.* => r/fastr/<engine>

# for all packages: replace 'gnur' by '<engine>'
.* => r/gnur/<engine>

# for all packages: replace mentions of the licence
.* => r/Version 3, 29 June 2007/Version 2, June 1991

# for all packages: unify line containing 'RUNIT TEST PROTOCOL'
.* => R/RUNIT TEST PROTOCOL -- /RUNIT TEST PROTOCOL -- <date_time>

# for all packages: delete line containing 'Press return for next page...'
.* => D/Press return for next page...

# for all packages: delete line containing 'detaching ‘package:grid’'
.* => D/detaching ‘package:grid’

# normalize environment addresses
.* => s/<environment: 0x[0-9A-Fa-f]*>/<environment: 0xCAFEBABE>

# ignore warnings for invalid source references
.* => D/Warning messages:
.* => D+0-1/Invalid source reference

# for individual packages:

# ------
iterators => D/Warning: closing unused connection 3
# In GraalVM home, there is no 'COPYING' file.
iterators => D+9/file.path(R.home(), 'COPYING')

# ------
# compare generates syntax error, GNUR unlike FastR provides some more details on the following 3 lines
# FastR syntax error
compare => D/Error in source(filename, local = TRUE) : parse error
# GNUR syntax error does not have "parse error"
compare => D+3/Error in source(filename, local = TRUE) :

# different list elements order: list created from env with env2list(... sorted=F)
# The items are listed in completely different order, so we basically ignore the whole statement
# and delete all the listed items.
compare => D+2/$edu
compare => D+2/$id
compare => D+3/$class
compare => D+2/$age

# ------
# "Error in try(stop("!!")) :" vs "Error :"
assertthat => r/Error in try(stop("!!"))/Error

# differences in paths
assertthat => s/Path '.*' does not exist/Path 'path/to/somewhere' does not exist
assertthat => s/Path '.*' is not a directory/Path 'path/to/dir' is not a directory

# different output format in GNUR and FastR
assertthat => R/[1] "mean %has_args% \"y\" is not TRUE"/REPLACED has_args
assertthat => R/[1] "`%has_args%`(f = mean, args = \"y\") is not TRUE"/REPLACED has_args

gnurtest => D-3/  OpenMP SIMD is not supported in this build of R

# --------
# glmnet, ROCR: graphics related issue, we don't implement graphics yet, just ignore
glmnet => D+1/Error in get("par.postscript", pos = "CheckExEnv") :
glmnet => D/Warning: from glmnet Fortran code
ROCR => D+1/Error in get("par.postscript", pos = "CheckExEnv") :

# --------
# ROCR: not clear why FastR does not produce this message, but doesn't seem important
ROCR => D/detaching ‘ROCR.hiv’

# --------
# quantmod: PDF device not supported in saveChart()
quantmod => D-2/  PDF device not supported.
quantmod => D/  incomplete final line found
quantmod => D/file  WYSIWYG
quantmod => D+3/1: In download.file
quantmod => D/'wget' call had nonzero exit status
quantmod => D/cannot open URL 'https://fred.stlouisfed.org/series/WYSIWYG/downloaddata/WYSIWYG.csv'
quantmod => s/There were [0-9]* warnings \(use warnings\(\) to see them\)/
quantmod => D+1-1/In read.table(file = file, header = header, sep = sep, quote = quote,  :
quantmod => d/>

# --------
sqldf => D/A svUnit test suite run in
sqldf => D/test.all (in runit.all.R) run in
sqldf => D/Could not load tcltk.  Will use slower R code instead.
sqldf => d/\>
# This is a logging output from GNU-R that is redundant.
sqldf => D+1/* : checkIdentical

# --------
# lpSolveAPI: one of the tests produces either 0 0 0 or three numbers close to 0
# The result is produced by native code and it seems that it may depend on some compiler configuration
lpSolveAPI => s/[0-9].[0-9]+e-3[0-9][0-9] [0-9].[0-9]+e-3[0-9][0-9] [0-9].[0-9]+e-3[0-9][0-9]/0 0 0

# --------
# clpAPI: this output is produces probably directly by C code and so it appears in the
# output on different positions depending on when the buffer is flushed
# Note: this package is not gated yet as we need the required SW to be installed there
# Note2: there is probably some bug in the filtering algorithm as these filters cause that
# in the GNU-R output we also remove line 'solveInitialCLP(lp)', but not in FastR output
clpAPI => D/Coin0506I Presolve 2 (-3) rows, 3 (-5) columns and 6 (-8) elements
clpAPI => D/Clp0006I 0  Obj 3.5 Dual inf 2.9473674 (1)
clpAPI => D/Clp0006I 1  Obj 3.2368421
clpAPI => D/Clp0000I Optimal - objective value 3.2368421
clpAPI => D/Coin0511I After Postsolve, objective 3.2368421, infeasibilities - dual 0 (0), primal 0 (0)
clpAPI => D/Clp0032I Optimal objective 3.236842105 - 1 iterations time

# --------
# foreign: the "pager" function (in R options) prints out this banner at the beginnin in FastR and not in GNU-R
foreign => D/==== R Information ====

# --------
# RcppBDT
RcppBDT => s/code for methods in class .* was not checked for suspicious field assignments \(recommended package ‘codetools’ not available\?\)/

# --------
# sqldf
sqldf => s/There were [0-9]* or more warnings \(use warnings\(\) to see the first [0-9]*\)/

