R version 3.4.0 (FastR)
Copyright (c) 2013-17, Oracle and/or its affiliates
Copyright (c) 1995-2017, The R Core Team
Copyright (c) 2017 The R Foundation for Statistical Computing
Copyright (c) 2012-4 Purdue University
Copyright (c) 1997-2002, Makoto Matsumoto and Takuji Nishimura
All rights reserved.

FastR is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information.

Type 'q()' to quit R.
> pkgname <- "xts"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('xts')
Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("addEventLines")
> ### * addEventLines
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: addEventLines
> ### Title: Add vertical lines to an existing xts plot
> ### Aliases: addEventLines
> 
> ### ** Examples
> 
> ## Not run: 
> ##D library(xts)
> ##D data(sample_matrix)
> ##D sample.xts <- as.xts(sample_matrix)
> ##D events <- xts(letters[1:3], 
> ##D               as.Date(c("2007-01-12", "2007-04-22", "2007-06-13")))
> ##D plot(sample.xts[,4])
> ##D addEventLines(events, srt=90, pos=2)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("addPanel")
> ### * addPanel
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: addPanel
> ### Title: Add a panel to an existing xts plot
> ### Aliases: addPanel
> 
> ### ** Examples
> 
> library(xts)
> data(sample_matrix)
> sample.xts <- as.xts(sample_matrix)
> 
> calcReturns <- function(price, method = c("discrete", "log")){
+   px <- try.xts(price)
+   method <- match.arg(method)[1L]
+   returns <- switch(method,
+     simple = ,
+     discrete = px / lag(px) - 1,
+     compound = ,
+     log = diff(log(px)))
+   reclass(returns, px)
+ }
> 
> # plot the Close
> plot(sample.xts[,"Close"])
Warning in function (xlim, ylim, log = "", asp = NA, ...) { :
  plot.window not supported. Note: FastR does not support graphics package and most of its functions. Please use grid package or grid based packages like lattice instead.
Warning in function (xlim, ylim, log = "", asp = NA, ...) { :
  plot.window not supported. Note: FastR does not support graphics package and most of its functions. Please use grid package or grid based packages like lattice instead.
Warning in clip(par("usr")[1], par("usr")[2], ylim[[frame]][1], ylim[[frame]][ :
  clip not supported. Note: FastR does not support graphics package and most of its functions. Please use grid package or grid based packages like lattice instead.
Warning in function (xlim, ylim, log = "", asp = NA, ...) { :
  plot.window not supported. Note: FastR does not support graphics package and most of its functions. Please use grid package or grid based packages like lattice instead.
Warning in clip(par("usr")[1], par("usr")[2], ylim[[frame]][1], ylim[[frame]][ :
  clip not supported. Note: FastR does not support graphics package and most of its functions. Please use grid package or grid based packages like lattice instead.
Warning in function (xlim, ylim, log = "", asp = NA, ...) { :
  plot.window not supported. Note: FastR does not support graphics package and most of its functions. Please use grid package or grid based packages like lattice instead.
Warning in clip(par("usr")[1], par("usr")[2], ylim[[frame]][1], ylim[[frame]][ :
  clip not supported. Note: FastR does not support graphics package and most of its functions. Please use grid package or grid based packages like lattice instead.
Error: not yet implemented: C_Par parameter '#FFFFFF'
> # calculate returns 
> addPanel(calcReturns, method="discrete", type="h")
com.oracle.truffle.r.runtime.RInternalError: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:325)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.callGroupGeneric(RCallNode.java:554)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:296)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.nodes.function.CallArgumentsNode.evaluateFlattenObjects(CallArgumentsNode.java:237)
	at com.oracle.truffle.r.nodes.function.RCallNode.callGroupGeneric(RCallNode.java:426)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:296)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doCached(InlineCacheNode.java:71)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.executeAndSpecialize(InlineCacheNodeGen.java:85)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:46)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:169)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode$PromiseCheckHelperNode.checkEvaluate(PromiseHelperNode.java:78)
	at com.oracle.truffle.r.nodes.builtin.base.Switch.doSwitchString(Switch.java:118)
	at com.oracle.truffle.r.nodes.builtin.base.Switch.doSwitch(Switch.java:99)
	at com.oracle.truffle.r.nodes.builtin.base.SwitchNodeGen.executeAndSpecialize(SwitchNodeGen.java:77)
	at com.oracle.truffle.r.nodes.builtin.base.SwitchNodeGen.execute(SwitchNodeGen.java:47)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.ReplacementDispatchNode.voidExecute(ReplacementDispatchNode.java:77)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.executeSlowpath(CallRFunctionNode.java:93)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.executeSlowpath(CallRFunctionNode.java:82)
	at com.oracle.truffle.r.engine.REngine.evalFunction(REngine.java:496)
	at com.oracle.truffle.r.nodes.builtin.base.DoCall$DoCallInternal.doSimple(DoCall.java:168)
	at com.oracle.truffle.r.nodes.builtin.base.DoCallNodeGen$DoCallInternalNodeGen.executeAndSpecialize(DoCallNodeGen.java:165)
	at com.oracle.truffle.r.nodes.builtin.base.DoCallNodeGen$DoCallInternalNodeGen.execute(DoCallNodeGen.java:146)
	at com.oracle.truffle.r.nodes.builtin.base.DoCall.doCall(DoCall.java:118)
	at com.oracle.truffle.r.nodes.builtin.base.DoCallNodeGen.executeAndSpecialize(DoCallNodeGen.java:89)
	at com.oracle.truffle.r.nodes.builtin.base.DoCallNodeGen.execute(DoCallNodeGen.java:55)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg4.call(RBuiltinNode.java:213)
	at com.oracle.truffle.r.nodes.builtin.InternalNode$InternalCallNode.execute(InternalNode.java:217)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.r.runtime.data.Closure.eval(Closure.java:112)
	at com.oracle.truffle.r.nodes.InlineCacheNode.evalPromise(InlineCacheNode.java:95)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doGeneric(InlineCacheNode.java:76)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:42)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:169)
	at com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:267)
	at com.oracle.truffle.r.nodes.access.variables.LookupNode.visibleExecute(ReadVariableNode.java:112)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.r.runtime.data.Closure.eval(Closure.java:112)
	at com.oracle.truffle.r.nodes.InlineCacheNode.evalPromise(InlineCacheNode.java:95)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doGeneric(InlineCacheNode.java:76)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:42)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueNonDefault(PromiseHelperNode.java:223)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:171)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueNonDefault(PromiseHelperNode.java:208)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:171)
	at com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:267)
	at com.oracle.truffle.r.nodes.access.variables.LookupNode.visibleExecute(ReadVariableNode.java:112)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doCached(InlineCacheNode.java:71)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:36)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueNonDefault(PromiseHelperNode.java:223)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:171)
	at com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.execute(LocalReadVariableNode.java:151)
	at com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.execute(LocalReadVariableNode.java:82)
	at com.oracle.truffle.r.nodes.function.PeekLocalVariableNode.execute(PeekLocalVariableNode.java:50)
	at com.oracle.truffle.r.nodes.function.PeekLocalVariableNode.visibleExecute(PeekLocalVariableNode.java:60)
	at com.oracle.truffle.r.nodes.builtin.base.ReturnSpecial.execute(Return.java:58)
	at com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:289)
	at com.oracle.truffle.r.nodes.function.RCallSpecialNode.visibleExecute(RCallSpecialNode.java:360)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doCached(InlineCacheNode.java:71)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:36)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:169)
	at com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:267)
	at com.oracle.truffle.r.nodes.access.variables.LookupNode.visibleExecute(ReadVariableNode.java:112)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:93)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:96)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.ReplacementDispatchNode.voidExecute(ReplacementDispatchNode.java:77)
	at com.oracle.truffle.r.nodes.control.BlockNode.voidExecute(BlockNode.java:72)
	at com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:72)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.engine.REngine$PolyglotEngineRootNode.execute(REngine.java:397)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.api.vm.PolyglotContextImpl.eval(PolyglotContextImpl.java:682)
	at org.graalvm.polyglot.Context.eval(Context.java:148)
	at com.oracle.truffle.r.launcher.RCommand.readEvalPrint(RCommand.java:271)
	at com.oracle.truffle.r.launcher.RCommand.doMain(RCommand.java:172)
	at com.oracle.truffle.r.launcher.RCommand.main(RCommand.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.oracle.graalvm.launcher.LegacyLauncher.main(stripped:20)
Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.readType(S3DispatchFunctions.java:264)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.nextMethod(S3DispatchFunctions.java:240)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$NextMethodNodeGen.executeAndSpecialize(S3DispatchFunctionsFactory.java:121)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$NextMethodNodeGen.execute(S3DispatchFunctionsFactory.java:99)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg3.call(RBuiltinNode.java:200)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.nodes.control.BlockNode.execute(BlockNode.java:65)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:80)
	at com.oracle.truffle.r.nodes.control.BlockNode.execute(BlockNode.java:65)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:83)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:83)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.ReplacementDispatchNode.voidExecute(ReplacementDispatchNode.java:77)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	... 265 more
Caused by: com.oracle.truffle.api.TruffleStackTrace

Frame(d=9): Ops.xts (called as: px/lag(px))
Frame(d=8): calcReturns (called as: function (price, method = c("discrete", "log")) {)
Frame(d=7): do.call (called as: do.call(fun, .formals))
Frame(d=6): <promise>892091760 (called as: addPanel(calcReturns, method = "discrete", type = "h"))
Frame(d=6): <promise>235195640 (called as: try(do.call(fun, .formals), silent = TRUE))
Frame(d=6): doTryCatch (called as: doTryCatch(return(expr), name, parentenv, handler))
Frame(d=5): tryCatchOne (called as: tryCatchOne(expr, names, parentenv, handlers[[1L]]))
Frame(d=4): tryCatchList <split-5e95b0ab> (called as: tryCatchList(expr, classes, parentenv, handlers))
Frame(d=3): tryCatch (called as: tryCatch(expr, error = function(e) {)
Frame(d=2): try (called as: try(do.call(fun, .formals), silent = TRUE))
Frame(d=1): addPanel (called as: addPanel(calcReturns, method = "discrete", type = "h"))
Frame(d=0): <repl wrapper> (called as: <invalid call>)
<empty frame>

with frame slot contents:

Frame(d=9): Ops.xts (called as: px/lag(px))
      .Generic = /
      .Method = [Ops.xts, Ops.xts]
      .Class = matrix
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@67f8f5a6
      .GenericDefEnv = null
      .Group = Ops
      e1 = <RDoubleVector with 180 elements>
      e2 = <RDoubleVector with 180 elements>
      CLASS = [xts, zoo]
      Visibility = true
      1 = <RDoubleVector with 180 elements>
      2 = <RDoubleVector with 180 elements>
Frame(d=8): calcReturns (called as: function (price, method = c("discrete", "log")) {)
      price = [2, org.graalvm.compiler.truffle.FrameWithoutBoxing@141b011a, expr=LookupNode@7976e536, [50.1177772350145, 50.3976663383861, 50.3323571013133, 50.3345948961691, 50.1811210391819, 49.99...]]
      method = discrete
      Visibility = true
      px = <RDoubleVector with 180 elements>
      TempFrameSlot = null
Frame(d=7): do.call (called as: do.call(fun, .formals))
      what = [4, com.oracle.truffle.r.runtime.VirtualEvalFrame$Substitute1@670a4738, expr=WrapArgumentNode@7d17906, calcReturns]
      args = [4, com.oracle.truffle.r.runtime.VirtualEvalFrame$Substitute1@670a4738, expr=WrapArgumentNode@97beeaf, [xdata, discrete]]
      quote = [3, null, expr=ConstantLogicalScalarNode@2f4d32bf, 0]
      envir = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@47ffdbba, expr=WrapDefaultArgumentNode@774d8276, <environment: 0xba0018e>]
      Visibility = true
Frame(d=6): <promise>892091760 (called as: addPanel(calcReturns, method = "discrete", type = "h"))
      FUN = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@56b66a26, calcReturns]
      main = [3, null, expr=ConstantObjectNode@6eaf030c, ]
      on = [3, null, expr=ConstantLogicalScalarNode@b2da3a5, -1]
      type = [2, null, expr=ConstantObjectNode@158e6fc2, h]
      col = [3, null, expr=ConstantObjectNode@6dbb3d7d, NULL]
      lty = [3, null, expr=ConstantDoubleScalarNode@7a3a49e5, 1.0]
      lwd = [3, null, expr=ConstantDoubleScalarNode@6c1b82cd, 1.0]
      pch = [3, null, expr=ConstantDoubleScalarNode@acd3460, 0.0]
      ... = RArgsValuesAndNames: method = [2, null, expr=ConstantObjectNode@54687fd0, discrete]
      Visibility = true
      chob = <environment: 0x1b485c8b>
      TempFrameSlot = null
      xdata = <RDoubleVector with 180 elements>
      1 = calcReturns
      fun = calcReturns
      .formals = [xdata, discrete]
      *rhs*0 = null
      *tmp*0 = null
Frame(d=6): <promise>235195640 (called as: try(do.call(fun, .formals), silent = TRUE))
      expr = [18, org.graalvm.compiler.truffle.FrameWithoutBoxing@141b011a, expr=WrapArgumentNode@352c3d70, null]
      silent = [2, null, expr=ConstantLogicalScalarNode@4c13ca07, 1]
      outFile = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@45311a99, expr=WrapDefaultArgumentNode@4f82663e, null]
      Visibility = true
      2 = <deserialized function>
Frame(d=6): doTryCatch (called as: doTryCatch(return(expr), name, parentenv, handler))
      expr = [18, org.graalvm.compiler.truffle.FrameWithoutBoxing@7037a680, expr=WrapArgumentNode@2d195ee4, null]
      name = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@7037a680, expr=WrapArgumentNode@2d6aca33, [error]]
      parentenv = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@7037a680, expr=WrapArgumentNode@21ab988f, <environment: 0x492c8137>]
      handler = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@7037a680, expr=WrapArgumentNode@29314cc9, <deserialized function>]
      Visibility = true
      8 = <deserialized function>
      HandlerStack = NULL
Frame(d=5): tryCatchOne (called as: tryCatchOne(expr, names, parentenv, handlers[[1L]]))
      expr = [16, org.graalvm.compiler.truffle.FrameWithoutBoxing@420b55ed, expr=WrapArgumentNode@64aad6db, null]
      name = [0, org.graalvm.compiler.truffle.FrameWithoutBoxing@420b55ed, expr=WrapArgumentNode@ae7950d, [error]]
      parentenv = [0, org.graalvm.compiler.truffle.FrameWithoutBoxing@420b55ed, expr=WrapArgumentNode@60d1b21f, <environment: 0x492c8137>]
      handler = [2, org.graalvm.compiler.truffle.FrameWithoutBoxing@420b55ed, expr=WrapArgumentNode@66c83fc8, <deserialized function>]
      Visibility = true
      doTryCatch = doTryCatch
Frame(d=4): tryCatchList <split-5e95b0ab> (called as: tryCatchList(expr, classes, parentenv, handlers))
      expr = [0, org.graalvm.compiler.truffle.FrameWithoutBoxing@f237ae7, expr=WrapArgumentNode@79767781, null]
      names = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@f237ae7, expr=WrapArgumentNode@78411116, [error]]
      parentenv = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@f237ae7, expr=WrapArgumentNode@aced190, <environment: 0x492c8137>]
      handlers = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@f237ae7, expr=WrapArgumentNode@245a060f, [<deserialized function>]]
      Visibility = true
      TempFrameSlot = null
      nh = 1
      8 = <deserialized function>
Frame(d=3): tryCatch (called as: tryCatch(expr, error = function(e) {)
      expr = [16, org.graalvm.compiler.truffle.FrameWithoutBoxing@45311a99, expr=WrapArgumentNode@e04ccf8, null]
      ... = RArgsValuesAndNames: error = [2, org.graalvm.compiler.truffle.FrameWithoutBoxing@45311a99, expr=WrapArgumentNode@51d143a1, <deserialized function>]
      finally = missing
      Visibility = true
      tryCatchList = tryCatchList
      tryCatchOne = tryCatchOne
      handlers = [<deserialized function>]
      TempFrameSlot = null
      classes = [error]
      parentenv = <environment: 0x492c8137>
Frame(d=2): try (called as: try(do.call(fun, .formals), silent = TRUE))
      expr = [18, org.graalvm.compiler.truffle.FrameWithoutBoxing@141b011a, expr=WrapArgumentNode@352c3d70, null]
      silent = [2, null, expr=ConstantLogicalScalarNode@4c13ca07, 1]
      outFile = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@45311a99, expr=WrapDefaultArgumentNode@4f82663e, null]
      Visibility = true
      2 = <deserialized function>
Frame(d=1): addPanel (called as: addPanel(calcReturns, method = "discrete", type = "h"))
      FUN = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@56b66a26, calcReturns]
      main = [3, null, expr=ConstantObjectNode@6eaf030c, ]
      on = [3, null, expr=ConstantLogicalScalarNode@b2da3a5, -1]
      type = [2, null, expr=ConstantObjectNode@158e6fc2, h]
      col = [3, null, expr=ConstantObjectNode@6dbb3d7d, NULL]
      lty = [3, null, expr=ConstantDoubleScalarNode@7a3a49e5, 1.0]
      lwd = [3, null, expr=ConstantDoubleScalarNode@6c1b82cd, 1.0]
      pch = [3, null, expr=ConstantDoubleScalarNode@acd3460, 0.0]
      ... = RArgsValuesAndNames: method = [2, null, expr=ConstantObjectNode@54687fd0, discrete]
      Visibility = true
      chob = <environment: 0x1b485c8b>
      TempFrameSlot = null
      xdata = <RDoubleVector with 180 elements>
      1 = calcReturns
      fun = calcReturns
      .formals = [xdata, discrete]
      *rhs*0 = null
      *tmp*0 = null
Frame(d=0): <repl wrapper> (called as: <invalid call>)
      Visibility = true
      .Random.seed = active binding
      pkgname = null
      sample_matrix = <RDoubleVector with 720 elements>
      sample.xts = <RDoubleVector with 720 elements>
      calcReturns = calcReturns
      TempFrameSlot = null
<empty frame>

> # Add simple moving average to panel 1
> addPanel(rollmean, k=20, on=1)
com.oracle.truffle.r.runtime.RInternalError: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:325)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.callGroupGeneric(RCallNode.java:554)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:296)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherCachedNode.execute(CallMatcherNode.java:270)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherUninitializedNode.execute(CallMatcherNode.java:176)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$Helper.dispatch(S3DispatchFunctions.java:71)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:113)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.executeAndSpecialize(S3DispatchFunctionsFactory.java:49)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:35)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.executeSlowpath(CallRFunctionNode.java:93)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.executeSlowpath(CallRFunctionNode.java:82)
	at com.oracle.truffle.r.engine.REngine.evalFunction(REngine.java:496)
	at com.oracle.truffle.r.nodes.builtin.base.DoCall$DoCallInternal.doSimple(DoCall.java:168)
	at com.oracle.truffle.r.nodes.builtin.base.DoCallNodeGen$DoCallInternalNodeGen.execute(DoCallNodeGen.java:135)
	at com.oracle.truffle.r.nodes.builtin.base.DoCall.doCall(DoCall.java:118)
	at com.oracle.truffle.r.nodes.builtin.base.DoCallNodeGen.execute(DoCallNodeGen.java:49)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg4.call(RBuiltinNode.java:213)
	at com.oracle.truffle.r.nodes.builtin.InternalNode$InternalCallNode.execute(InternalNode.java:217)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.r.runtime.data.Closure.eval(Closure.java:112)
	at com.oracle.truffle.r.nodes.InlineCacheNode.evalPromise(InlineCacheNode.java:95)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doGeneric(InlineCacheNode.java:76)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:42)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:169)
	at com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:267)
	at com.oracle.truffle.r.nodes.access.variables.LookupNode.visibleExecute(ReadVariableNode.java:112)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.r.runtime.data.Closure.eval(Closure.java:112)
	at com.oracle.truffle.r.nodes.InlineCacheNode.evalPromise(InlineCacheNode.java:95)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doGeneric(InlineCacheNode.java:76)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:42)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueNonDefault(PromiseHelperNode.java:223)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:171)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueNonDefault(PromiseHelperNode.java:208)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:171)
	at com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:267)
	at com.oracle.truffle.r.nodes.access.variables.LookupNode.visibleExecute(ReadVariableNode.java:112)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doCached(InlineCacheNode.java:71)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:36)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueNonDefault(PromiseHelperNode.java:223)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:171)
	at com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.execute(LocalReadVariableNode.java:151)
	at com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.execute(LocalReadVariableNode.java:82)
	at com.oracle.truffle.r.nodes.function.PeekLocalVariableNode.execute(PeekLocalVariableNode.java:50)
	at com.oracle.truffle.r.nodes.function.PeekLocalVariableNode.visibleExecute(PeekLocalVariableNode.java:60)
	at com.oracle.truffle.r.nodes.builtin.base.ReturnSpecial.execute(Return.java:58)
	at com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:289)
	at com.oracle.truffle.r.nodes.function.RCallSpecialNode.visibleExecute(RCallSpecialNode.java:360)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doCached(InlineCacheNode.java:71)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:36)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:169)
	at com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:267)
	at com.oracle.truffle.r.nodes.access.variables.LookupNode.visibleExecute(ReadVariableNode.java:112)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:93)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:96)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.ReplacementDispatchNode.voidExecute(ReplacementDispatchNode.java:77)
	at com.oracle.truffle.r.nodes.control.BlockNode.voidExecute(BlockNode.java:72)
	at com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.engine.REngine$PolyglotEngineRootNode.execute(REngine.java:397)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.api.vm.PolyglotContextImpl.eval(PolyglotContextImpl.java:682)
	at org.graalvm.polyglot.Context.eval(Context.java:148)
	at com.oracle.truffle.r.launcher.RCommand.readEvalPrint(RCommand.java:271)
	at com.oracle.truffle.r.launcher.RCommand.doMain(RCommand.java:172)
	at com.oracle.truffle.r.launcher.RCommand.main(RCommand.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.oracle.graalvm.launcher.LegacyLauncher.main(stripped:20)
Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.readType(S3DispatchFunctions.java:264)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.nextMethod(S3DispatchFunctions.java:240)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$NextMethodNodeGen.executeAndSpecialize(S3DispatchFunctionsFactory.java:121)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$NextMethodNodeGen.execute(S3DispatchFunctionsFactory.java:99)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg3.call(RBuiltinNode.java:200)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.nodes.control.BlockNode.execute(BlockNode.java:65)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:80)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:83)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	... 262 more
Caused by: com.oracle.truffle.api.TruffleStackTrace

Frame(d=10): Ops.xts (called as: rollsum.xts(x = x, k = k, fill = fill, align = align, ...)/k)
Frame(d=9): rollmean.xts (called as: rollmean.xts(c(50.1177772350145, 50.3976663383861, 50.3323571013133, 50.3345948961691, 50.1811210391819, 49.9918544993091, 49.988063256042, 49.913329335608, 49.9724600550638, 50.239103712694, 50.2851940807548, 50.4128602347002, 50.6014452374366, 50.4891214813319, 50.6783465243683, 50.4864408302735, 50.5763196086684, 50.4127813388677, 50.0214153820363, 50.4208972428836, 50.2112913039383, 50.1696064309279, 50.2314483010655, 50.2433369933702, 50.070242540723, 50.0109145160256, 49.8809633637625, 49.9187495029809, 50.0218043126519, 50.2257790634706, 50.3578435161537, 50.3692756978625, 50.4310899203875, 50.5550923533772, 50.6978278150252, 50.4986480384182, 50.6061055576287, 50.8138255864256, 50.6768581674052, 50.695622055169, 50.9115985194411, 50.9665340950417, 50.9010550008819, 51.0469861312818, 51.0518465248395, 51.0216357806733, 51.1365256784907, 51.1515142172957, 51.1789930735369, 50.9352261443787, 50.7732543242554, 50.8659669412615, 50.7649826990875, 50.7953382903315, 50.8477621406292, 50.7548084168209, 50.6920604718023, 50.770905453827, 50.570749692632, 50.6155918666066, 50.4103286523541, 50.3263588179421, 50.2956702271079, 50.1638044184635, 49.9138089296028, 49.9183871340213, 49.8071204530403, 49.8869833529875, 49.78805814558, 49.7403315550003, 49.3792415099661, 49.5373488863704, 49.496003986535, 49.5950011884777, 49.3471431527284, 49.6546261076859, 49.5458954022922, 49.5068963631111, 49.5180739210179, 49.3968738599656, 48.9309517223527, 48.5268371665895, 48.3397338277091, 48.2896926777253, 48.30850892202, 48.5359461762133, 48.6998847605209, 48.9354567345693, 48.974901416968, 48.8703195118646, 49.0631647734845, 49.245253833598, 49.3473606787059, 49.3377557822211, 49.4189994859189, 49.5381883056603, 49.4180628219513, 49.5023417359146, 49.7698448660165, 49.7462345946245, 49.7299649322951, 49.7333931653161, 49.7555215783115, 49.7094151808194, 49.8388590726778, 49.954558677343, 50.0720779787385, 49.8394501870147, 49.9110274504956, 50.2012292399203, 50.3255614801967, 49.8853882678616, 49.7276899923422, 49.8847151942606, 49.7920112943787, 49.5081397146114, 49.2918633073164, 49.1352904471748, 49.3397448231728, 49.4713813499697, 49.3852052435403, 49.5867696788652, 49.4137530585047, 49.1031043568417, 49.4599885580201, 49.1357230365042, 49.1893012571989, 48.7270762056073, 48.3800124679673, 47.9690434191124, 48.0193547288843, 47.6620855703505, 47.6592988835332, 47.726862406458, 47.8668317346629, 47.6293786041021, 47.6842280532209, 47.6053615081546, 47.9308458230391, 47.7807235394881, 47.8294556467246, 47.9006826430557, 48.0113049442773, 48.1605755467172, 47.9961340046721, 47.9019342884565, 47.6471764517754, 47.8725213360129, 47.8329083126244, 47.7377986168352, 47.6512305894323, 47.7256907018078, 47.501976670636, 47.3764237289667, 47.2292952802724, 47.4004820908595, 47.4526174659862, 47.4835950385865, 47.7476950731972, 47.2868487885989, 47.1466018260288, 47.4183383185878, 47.4308266385453, 47.3488381779215, 47.3677901566039, 47.2605645709109, 47.3952135245457, 47.3642401566334, 47.6722018616947, 47.668434910213, 47.6292144787367, 47.3254940958526, 47.2477128773392, 47.2276437542817, 47.4277219359799, 47.6161097730372, 47.6276905335225, 47.6071583256498, 47.6647123051268, 47.7671937777376), )
Frame(d=8): <no source> (called as: function (x, k, fill = if (na.pad) NA, na.pad = FALSE, align = c()
Frame(d=7): do.call (called as: do.call(fun, c(list(xdata), list(...)), quote = TRUE))
Frame(d=6): <promise>1711573700 (called as: addPanel(rollmean, k = 20, on = 1))
Frame(d=6): <promise>235195640 (called as: try(do.call(fun, c(list(xdata), list(...)), quote = TRUE), silent = TRUE))
Frame(d=6): doTryCatch (called as: doTryCatch(return(expr), name, parentenv, handler))
Frame(d=5): tryCatchOne (called as: tryCatchOne(expr, names, parentenv, handlers[[1L]]))
Frame(d=4): tryCatchList <split-5e95b0ab> (called as: tryCatchList(expr, classes, parentenv, handlers))
Frame(d=3): tryCatch (called as: tryCatch(expr, error = function(e) {)
Frame(d=2): try (called as: try(do.call(fun, c(list(xdata), list(...)), quote = TRUE), silent = TRUE))
Frame(d=1): addPanel (called as: addPanel(rollmean, k = 20, on = 1))
Frame(d=0): <repl wrapper> (called as: <invalid call>)
<empty frame>

with frame slot contents:

Frame(d=10): Ops.xts (called as: rollsum.xts(x = x, k = k, fill = fill, align = align, ...)/k)
      .Generic = /
      .Method = [Ops.xts, ]
      .Class = matrix
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@148b6f95
      .GenericDefEnv = null
      .Group = Ops
      e1 = <RDoubleVector with 180 elements>
      e2 = 20.0
      CLASS = [xts, zoo]
      Visibility = true
      1 = null
      2 = null
Frame(d=9): rollmean.xts (called as: rollmean.xts(c(50.1177772350145, 50.3976663383861, 50.3323571013133, 50.3345948961691, 50.1811210391819, 49.9918544993091, 49.988063256042, 49.913329335608, 49.9724600550638, 50.239103712694, 50.2851940807548, 50.4128602347002, 50.6014452374366, 50.4891214813319, 50.6783465243683, 50.4864408302735, 50.5763196086684, 50.4127813388677, 50.0214153820363, 50.4208972428836, 50.2112913039383, 50.1696064309279, 50.2314483010655, 50.2433369933702, 50.070242540723, 50.0109145160256, 49.8809633637625, 49.9187495029809, 50.0218043126519, 50.2257790634706, 50.3578435161537, 50.3692756978625, 50.4310899203875, 50.5550923533772, 50.6978278150252, 50.4986480384182, 50.6061055576287, 50.8138255864256, 50.6768581674052, 50.695622055169, 50.9115985194411, 50.9665340950417, 50.9010550008819, 51.0469861312818, 51.0518465248395, 51.0216357806733, 51.1365256784907, 51.1515142172957, 51.1789930735369, 50.9352261443787, 50.7732543242554, 50.8659669412615, 50.7649826990875, 50.7953382903315, 50.8477621406292, 50.7548084168209, 50.6920604718023, 50.770905453827, 50.570749692632, 50.6155918666066, 50.4103286523541, 50.3263588179421, 50.2956702271079, 50.1638044184635, 49.9138089296028, 49.9183871340213, 49.8071204530403, 49.8869833529875, 49.78805814558, 49.7403315550003, 49.3792415099661, 49.5373488863704, 49.496003986535, 49.5950011884777, 49.3471431527284, 49.6546261076859, 49.5458954022922, 49.5068963631111, 49.5180739210179, 49.3968738599656, 48.9309517223527, 48.5268371665895, 48.3397338277091, 48.2896926777253, 48.30850892202, 48.5359461762133, 48.6998847605209, 48.9354567345693, 48.974901416968, 48.8703195118646, 49.0631647734845, 49.245253833598, 49.3473606787059, 49.3377557822211, 49.4189994859189, 49.5381883056603, 49.4180628219513, 49.5023417359146, 49.7698448660165, 49.7462345946245, 49.7299649322951, 49.7333931653161, 49.7555215783115, 49.7094151808194, 49.8388590726778, 49.954558677343, 50.0720779787385, 49.8394501870147, 49.9110274504956, 50.2012292399203, 50.3255614801967, 49.8853882678616, 49.7276899923422, 49.8847151942606, 49.7920112943787, 49.5081397146114, 49.2918633073164, 49.1352904471748, 49.3397448231728, 49.4713813499697, 49.3852052435403, 49.5867696788652, 49.4137530585047, 49.1031043568417, 49.4599885580201, 49.1357230365042, 49.1893012571989, 48.7270762056073, 48.3800124679673, 47.9690434191124, 48.0193547288843, 47.6620855703505, 47.6592988835332, 47.726862406458, 47.8668317346629, 47.6293786041021, 47.6842280532209, 47.6053615081546, 47.9308458230391, 47.7807235394881, 47.8294556467246, 47.9006826430557, 48.0113049442773, 48.1605755467172, 47.9961340046721, 47.9019342884565, 47.6471764517754, 47.8725213360129, 47.8329083126244, 47.7377986168352, 47.6512305894323, 47.7256907018078, 47.501976670636, 47.3764237289667, 47.2292952802724, 47.4004820908595, 47.4526174659862, 47.4835950385865, 47.7476950731972, 47.2868487885989, 47.1466018260288, 47.4183383185878, 47.4308266385453, 47.3488381779215, 47.3677901566039, 47.2605645709109, 47.3952135245457, 47.3642401566334, 47.6722018616947, 47.668434910213, 47.6292144787367, 47.3254940958526, 47.2477128773392, 47.2276437542817, 47.4277219359799, 47.6161097730372, 47.6276905335225, 47.6071583256498, 47.6647123051268, 47.7671937777376), )
      .Generic = rollmean
      .Method = rollmean.xts
      .Class = [xts, zoo]
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@5ee581db
      .GenericDefEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@5a6efe33
      .Group = null
      x = <RDoubleVector with 180 elements>
      k = 20.0
      fill = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@148b6f95, expr=WrapDefaultArgumentNode@6644bdf5, null]
      na.pad = [3, null, expr=ConstantLogicalScalarNode@13cf5f8a, 1]
      align = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@148b6f95, expr=WrapDefaultArgumentNode@7c9ea1d0, [right, center, left]]
      ... = RArgsValuesAndNames: 
      TempFrameSlot = null
      Visibility = true
Frame(d=8): <no source> (called as: function (x, k, fill = if (na.pad) NA, na.pad = FALSE, align = c()
      x = <RDoubleVector with 180 elements>
      k = 20.0
      fill = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@3e5ebdfe, expr=WrapDefaultArgumentNode@151659dd, null]
      na.pad = [3, null, expr=ConstantLogicalScalarNode@4a58e0e9, 0]
      align = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@3e5ebdfe, expr=WrapDefaultArgumentNode@e8c84eb, null]
      ... = RArgsValuesAndNames: 
Frame(d=7): do.call (called as: do.call(fun, c(list(xdata), list(...)), quote = TRUE))
      what = [4, com.oracle.truffle.r.runtime.VirtualEvalFrame$Substitute1@71668a67, expr=WrapArgumentNode@5d404a3c, <no source>]
      args = [2, com.oracle.truffle.r.runtime.VirtualEvalFrame$Substitute1@71668a67, expr=WrapArgumentNode@af9dd34, [[50.1177772350145, 50.3976663383861, 50.3323571013133, 50.3345948961691, 50.1811210391819, 49.9...]]
      quote = [2, null, expr=ConstantLogicalScalarNode@48692405, 1]
      envir = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@3ff26c9, expr=WrapDefaultArgumentNode@774d8276, <environment: 0x2ecdcfe3>]
      Visibility = true
Frame(d=6): <promise>1711573700 (called as: addPanel(rollmean, k = 20, on = 1))
      FUN = [2, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@4f8900b0, <no source>]
      main = [3, null, expr=ConstantObjectNode@6eaf030c, ]
      on = [2, null, expr=ConstantDoubleScalarNode@e7e455d, 1.0]
      type = [3, null, expr=ConstantObjectNode@1f4d38f9, l]
      col = [3, null, expr=ConstantObjectNode@6dbb3d7d, NULL]
      lty = [3, null, expr=ConstantDoubleScalarNode@7a3a49e5, 1.0]
      lwd = [3, null, expr=ConstantDoubleScalarNode@6c1b82cd, 1.0]
      pch = [3, null, expr=ConstantDoubleScalarNode@acd3460, 0.0]
      ... = RArgsValuesAndNames: k = [2, null, expr=ConstantDoubleScalarNode@33e8e146, 20.0]
      Visibility = true
      chob = <environment: 0x1b485c8b>
      TempFrameSlot = null
      xdata = <RDoubleVector with 180 elements>
      1 = null
      fun = <no source>
      .formals = type=null, tag=x, car=RSymbol, cdr=RPairList
      *rhs*0 = null
      *tmp*0 = null
Frame(d=6): <promise>235195640 (called as: try(do.call(fun, c(list(xdata), list(...)), quote = TRUE), silent = TRUE))
      expr = [18, org.graalvm.compiler.truffle.FrameWithoutBoxing@5ee581db, expr=WrapArgumentNode@66048ac4, null]
      silent = [2, null, expr=ConstantLogicalScalarNode@4f525e13, 1]
      outFile = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@65b73689, expr=WrapDefaultArgumentNode@4f82663e, null]
      Visibility = true
      2 = <deserialized function>
Frame(d=6): doTryCatch (called as: doTryCatch(return(expr), name, parentenv, handler))
      expr = [18, org.graalvm.compiler.truffle.FrameWithoutBoxing@2047adea, expr=WrapArgumentNode@2d195ee4, null]
      name = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@2047adea, expr=WrapArgumentNode@2d6aca33, [error]]
      parentenv = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@2047adea, expr=WrapArgumentNode@21ab988f, <environment: 0x5af40e45>]
      handler = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@2047adea, expr=WrapArgumentNode@29314cc9, <deserialized function>]
      Visibility = true
      8 = <deserialized function>
      HandlerStack = type=null, tag=NULL, car=RList, cdr=RNull
Frame(d=5): tryCatchOne (called as: tryCatchOne(expr, names, parentenv, handlers[[1L]]))
      expr = [16, org.graalvm.compiler.truffle.FrameWithoutBoxing@1a06602f, expr=WrapArgumentNode@64aad6db, null]
      name = [0, org.graalvm.compiler.truffle.FrameWithoutBoxing@1a06602f, expr=WrapArgumentNode@ae7950d, [error]]
      parentenv = [0, org.graalvm.compiler.truffle.FrameWithoutBoxing@1a06602f, expr=WrapArgumentNode@60d1b21f, <environment: 0x5af40e45>]
      handler = [2, org.graalvm.compiler.truffle.FrameWithoutBoxing@1a06602f, expr=WrapArgumentNode@66c83fc8, <deserialized function>]
      Visibility = true
      doTryCatch = doTryCatch
Frame(d=4): tryCatchList <split-5e95b0ab> (called as: tryCatchList(expr, classes, parentenv, handlers))
      expr = [0, org.graalvm.compiler.truffle.FrameWithoutBoxing@46591e98, expr=WrapArgumentNode@79767781, null]
      names = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@46591e98, expr=WrapArgumentNode@78411116, [error]]
      parentenv = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@46591e98, expr=WrapArgumentNode@aced190, <environment: 0x5af40e45>]
      handlers = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@46591e98, expr=WrapArgumentNode@245a060f, [<deserialized function>]]
      Visibility = true
      TempFrameSlot = null
      nh = 1
      8 = <deserialized function>
Frame(d=3): tryCatch (called as: tryCatch(expr, error = function(e) {)
      expr = [16, org.graalvm.compiler.truffle.FrameWithoutBoxing@65b73689, expr=WrapArgumentNode@e04ccf8, null]
      ... = RArgsValuesAndNames: error = [2, org.graalvm.compiler.truffle.FrameWithoutBoxing@65b73689, expr=WrapArgumentNode@51d143a1, <deserialized function>]
      finally = missing
      Visibility = true
      tryCatchList = tryCatchList
      tryCatchOne = tryCatchOne
      handlers = [<deserialized function>]
      TempFrameSlot = null
      classes = [error]
      parentenv = <environment: 0x5af40e45>
Frame(d=2): try (called as: try(do.call(fun, c(list(xdata), list(...)), quote = TRUE), silent = TRUE))
      expr = [18, org.graalvm.compiler.truffle.FrameWithoutBoxing@5ee581db, expr=WrapArgumentNode@66048ac4, null]
      silent = [2, null, expr=ConstantLogicalScalarNode@4f525e13, 1]
      outFile = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@65b73689, expr=WrapDefaultArgumentNode@4f82663e, null]
      Visibility = true
      2 = <deserialized function>
Frame(d=1): addPanel (called as: addPanel(rollmean, k = 20, on = 1))
      FUN = [2, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@4f8900b0, <no source>]
      main = [3, null, expr=ConstantObjectNode@6eaf030c, ]
      on = [2, null, expr=ConstantDoubleScalarNode@e7e455d, 1.0]
      type = [3, null, expr=ConstantObjectNode@1f4d38f9, l]
      col = [3, null, expr=ConstantObjectNode@6dbb3d7d, NULL]
      lty = [3, null, expr=ConstantDoubleScalarNode@7a3a49e5, 1.0]
      lwd = [3, null, expr=ConstantDoubleScalarNode@6c1b82cd, 1.0]
      pch = [3, null, expr=ConstantDoubleScalarNode@acd3460, 0.0]
      ... = RArgsValuesAndNames: k = [2, null, expr=ConstantDoubleScalarNode@33e8e146, 20.0]
      Visibility = true
      chob = <environment: 0x1b485c8b>
      TempFrameSlot = null
      xdata = <RDoubleVector with 180 elements>
      1 = null
      fun = <no source>
      .formals = type=null, tag=x, car=RSymbol, cdr=RPairList
      *rhs*0 = null
      *tmp*0 = null
Frame(d=0): <repl wrapper> (called as: <invalid call>)
      Visibility = true
      .Random.seed = active binding
      pkgname = null
      sample_matrix = <RDoubleVector with 720 elements>
      sample.xts = <RDoubleVector with 720 elements>
      calcReturns = calcReturns
      TempFrameSlot = null
<empty frame>

> addPanel(rollmean, k=40, col="blue", on=1)
com.oracle.truffle.r.runtime.RInternalError: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:325)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.callGroupGeneric(RCallNode.java:554)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:189)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherCachedNode.execute(CallMatcherNode.java:270)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$Helper.dispatch(S3DispatchFunctions.java:71)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:113)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:32)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.executeSlowpath(CallRFunctionNode.java:93)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.executeSlowpath(CallRFunctionNode.java:82)
	at com.oracle.truffle.r.engine.REngine.evalFunction(REngine.java:496)
	at com.oracle.truffle.r.nodes.builtin.base.DoCall$DoCallInternal.doSimple(DoCall.java:168)
	at com.oracle.truffle.r.nodes.builtin.base.DoCallNodeGen$DoCallInternalNodeGen.execute(DoCallNodeGen.java:135)
	at com.oracle.truffle.r.nodes.builtin.base.DoCall.doCall(DoCall.java:118)
	at com.oracle.truffle.r.nodes.builtin.base.DoCallNodeGen.execute(DoCallNodeGen.java:49)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg4.call(RBuiltinNode.java:213)
	at com.oracle.truffle.r.nodes.builtin.InternalNode$InternalCallNode.execute(InternalNode.java:217)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doCached(InlineCacheNode.java:71)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.executeAndSpecialize(InlineCacheNodeGen.java:85)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:46)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:169)
	at com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:267)
	at com.oracle.truffle.r.nodes.access.variables.LookupNode.visibleExecute(ReadVariableNode.java:112)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.r.runtime.data.Closure.eval(Closure.java:112)
	at com.oracle.truffle.r.nodes.InlineCacheNode.evalPromise(InlineCacheNode.java:95)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doGeneric(InlineCacheNode.java:76)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:42)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueNonDefault(PromiseHelperNode.java:223)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:171)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueNonDefault(PromiseHelperNode.java:208)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:171)
	at com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:267)
	at com.oracle.truffle.r.nodes.access.variables.LookupNode.visibleExecute(ReadVariableNode.java:112)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doCached(InlineCacheNode.java:71)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:36)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueNonDefault(PromiseHelperNode.java:223)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:171)
	at com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.execute(LocalReadVariableNode.java:151)
	at com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.execute(LocalReadVariableNode.java:82)
	at com.oracle.truffle.r.nodes.function.PeekLocalVariableNode.execute(PeekLocalVariableNode.java:50)
	at com.oracle.truffle.r.nodes.function.PeekLocalVariableNode.visibleExecute(PeekLocalVariableNode.java:60)
	at com.oracle.truffle.r.nodes.builtin.base.ReturnSpecial.execute(Return.java:58)
	at com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:289)
	at com.oracle.truffle.r.nodes.function.RCallSpecialNode.visibleExecute(RCallSpecialNode.java:360)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doCached(InlineCacheNode.java:71)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:36)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:169)
	at com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:267)
	at com.oracle.truffle.r.nodes.access.variables.LookupNode.visibleExecute(ReadVariableNode.java:112)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:93)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:96)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.BlockNode.voidExecute(BlockNode.java:72)
	at com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.engine.REngine$PolyglotEngineRootNode.execute(REngine.java:397)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.api.vm.PolyglotContextImpl.eval(PolyglotContextImpl.java:682)
	at org.graalvm.polyglot.Context.eval(Context.java:148)
	at com.oracle.truffle.r.launcher.RCommand.readEvalPrint(RCommand.java:271)
	at com.oracle.truffle.r.launcher.RCommand.doMain(RCommand.java:172)
	at com.oracle.truffle.r.launcher.RCommand.main(RCommand.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.oracle.graalvm.launcher.LegacyLauncher.main(stripped:20)
Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.readType(S3DispatchFunctions.java:264)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.nextMethod(S3DispatchFunctions.java:240)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$NextMethodNodeGen.execute(S3DispatchFunctionsFactory.java:95)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg3.call(RBuiltinNode.java:200)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.nodes.control.BlockNode.execute(BlockNode.java:65)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:80)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:83)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	... 246 more
Caused by: com.oracle.truffle.api.TruffleStackTrace

Frame(d=10): Ops.xts (called as: rollsum.xts(x = x, k = k, fill = fill, align = align, ...)/k)
Frame(d=9): rollmean.xts (called as: rollmean.xts(c(50.1177772350145, 50.3976663383861, 50.3323571013133, 50.3345948961691, 50.1811210391819, 49.9918544993091, 49.988063256042, 49.913329335608, 49.9724600550638, 50.239103712694, 50.2851940807548, 50.4128602347002, 50.6014452374366, 50.4891214813319, 50.6783465243683, 50.4864408302735, 50.5763196086684, 50.4127813388677, 50.0214153820363, 50.4208972428836, 50.2112913039383, 50.1696064309279, 50.2314483010655, 50.2433369933702, 50.070242540723, 50.0109145160256, 49.8809633637625, 49.9187495029809, 50.0218043126519, 50.2257790634706, 50.3578435161537, 50.3692756978625, 50.4310899203875, 50.5550923533772, 50.6978278150252, 50.4986480384182, 50.6061055576287, 50.8138255864256, 50.6768581674052, 50.695622055169, 50.9115985194411, 50.9665340950417, 50.9010550008819, 51.0469861312818, 51.0518465248395, 51.0216357806733, 51.1365256784907, 51.1515142172957, 51.1789930735369, 50.9352261443787, 50.7732543242554, 50.8659669412615, 50.7649826990875, 50.7953382903315, 50.8477621406292, 50.7548084168209, 50.6920604718023, 50.770905453827, 50.570749692632, 50.6155918666066, 50.4103286523541, 50.3263588179421, 50.2956702271079, 50.1638044184635, 49.9138089296028, 49.9183871340213, 49.8071204530403, 49.8869833529875, 49.78805814558, 49.7403315550003, 49.3792415099661, 49.5373488863704, 49.496003986535, 49.5950011884777, 49.3471431527284, 49.6546261076859, 49.5458954022922, 49.5068963631111, 49.5180739210179, 49.3968738599656, 48.9309517223527, 48.5268371665895, 48.3397338277091, 48.2896926777253, 48.30850892202, 48.5359461762133, 48.6998847605209, 48.9354567345693, 48.974901416968, 48.8703195118646, 49.0631647734845, 49.245253833598, 49.3473606787059, 49.3377557822211, 49.4189994859189, 49.5381883056603, 49.4180628219513, 49.5023417359146, 49.7698448660165, 49.7462345946245, 49.7299649322951, 49.7333931653161, 49.7555215783115, 49.7094151808194, 49.8388590726778, 49.954558677343, 50.0720779787385, 49.8394501870147, 49.9110274504956, 50.2012292399203, 50.3255614801967, 49.8853882678616, 49.7276899923422, 49.8847151942606, 49.7920112943787, 49.5081397146114, 49.2918633073164, 49.1352904471748, 49.3397448231728, 49.4713813499697, 49.3852052435403, 49.5867696788652, 49.4137530585047, 49.1031043568417, 49.4599885580201, 49.1357230365042, 49.1893012571989, 48.7270762056073, 48.3800124679673, 47.9690434191124, 48.0193547288843, 47.6620855703505, 47.6592988835332, 47.726862406458, 47.8668317346629, 47.6293786041021, 47.6842280532209, 47.6053615081546, 47.9308458230391, 47.7807235394881, 47.8294556467246, 47.9006826430557, 48.0113049442773, 48.1605755467172, 47.9961340046721, 47.9019342884565, 47.6471764517754, 47.8725213360129, 47.8329083126244, 47.7377986168352, 47.6512305894323, 47.7256907018078, 47.501976670636, 47.3764237289667, 47.2292952802724, 47.4004820908595, 47.4526174659862, 47.4835950385865, 47.7476950731972, 47.2868487885989, 47.1466018260288, 47.4183383185878, 47.4308266385453, 47.3488381779215, 47.3677901566039, 47.2605645709109, 47.3952135245457, 47.3642401566334, 47.6722018616947, 47.668434910213, 47.6292144787367, 47.3254940958526, 47.2477128773392, 47.2276437542817, 47.4277219359799, 47.6161097730372, 47.6276905335225, 47.6071583256498, 47.6647123051268, 47.7671937777376), )
Frame(d=8): <no source> (called as: function (x, k, fill = if (na.pad) NA, na.pad = FALSE, align = c()
Frame(d=7): do.call (called as: do.call(fun, c(list(xdata), list(...)), quote = TRUE))
Frame(d=6): <promise>66588044 (called as: try(do.call(fun, c(list(xdata), list(...)), quote = TRUE), silent = TRUE))
Frame(d=6): doTryCatch (called as: doTryCatch(return(expr), name, parentenv, handler))
Frame(d=5): tryCatchOne (called as: tryCatchOne(expr, names, parentenv, handlers[[1L]]))
Frame(d=4): tryCatchList <split-5e95b0ab> (called as: tryCatchList(expr, classes, parentenv, handlers))
Frame(d=3): tryCatch (called as: tryCatch(expr, error = function(e) {)
Frame(d=2): try <split-1f75fd1d> (called as: try(do.call(fun, c(list(xdata), list(...)), quote = TRUE), silent = TRUE))
Frame(d=1): addPanel (called as: addPanel(rollmean, k = 40, col = "blue", on = 1))
Frame(d=0): <repl wrapper> (called as: <invalid call>)
<empty frame>

with frame slot contents:

Frame(d=10): Ops.xts (called as: rollsum.xts(x = x, k = k, fill = fill, align = align, ...)/k)
      .Generic = /
      .Method = [Ops.xts, ]
      .Class = matrix
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@638d2ce3
      .GenericDefEnv = null
      .Group = Ops
      e1 = <RDoubleVector with 180 elements>
      e2 = 40.0
      CLASS = [xts, zoo]
      Visibility = true
      1 = null
      2 = null
Frame(d=9): rollmean.xts (called as: rollmean.xts(c(50.1177772350145, 50.3976663383861, 50.3323571013133, 50.3345948961691, 50.1811210391819, 49.9918544993091, 49.988063256042, 49.913329335608, 49.9724600550638, 50.239103712694, 50.2851940807548, 50.4128602347002, 50.6014452374366, 50.4891214813319, 50.6783465243683, 50.4864408302735, 50.5763196086684, 50.4127813388677, 50.0214153820363, 50.4208972428836, 50.2112913039383, 50.1696064309279, 50.2314483010655, 50.2433369933702, 50.070242540723, 50.0109145160256, 49.8809633637625, 49.9187495029809, 50.0218043126519, 50.2257790634706, 50.3578435161537, 50.3692756978625, 50.4310899203875, 50.5550923533772, 50.6978278150252, 50.4986480384182, 50.6061055576287, 50.8138255864256, 50.6768581674052, 50.695622055169, 50.9115985194411, 50.9665340950417, 50.9010550008819, 51.0469861312818, 51.0518465248395, 51.0216357806733, 51.1365256784907, 51.1515142172957, 51.1789930735369, 50.9352261443787, 50.7732543242554, 50.8659669412615, 50.7649826990875, 50.7953382903315, 50.8477621406292, 50.7548084168209, 50.6920604718023, 50.770905453827, 50.570749692632, 50.6155918666066, 50.4103286523541, 50.3263588179421, 50.2956702271079, 50.1638044184635, 49.9138089296028, 49.9183871340213, 49.8071204530403, 49.8869833529875, 49.78805814558, 49.7403315550003, 49.3792415099661, 49.5373488863704, 49.496003986535, 49.5950011884777, 49.3471431527284, 49.6546261076859, 49.5458954022922, 49.5068963631111, 49.5180739210179, 49.3968738599656, 48.9309517223527, 48.5268371665895, 48.3397338277091, 48.2896926777253, 48.30850892202, 48.5359461762133, 48.6998847605209, 48.9354567345693, 48.974901416968, 48.8703195118646, 49.0631647734845, 49.245253833598, 49.3473606787059, 49.3377557822211, 49.4189994859189, 49.5381883056603, 49.4180628219513, 49.5023417359146, 49.7698448660165, 49.7462345946245, 49.7299649322951, 49.7333931653161, 49.7555215783115, 49.7094151808194, 49.8388590726778, 49.954558677343, 50.0720779787385, 49.8394501870147, 49.9110274504956, 50.2012292399203, 50.3255614801967, 49.8853882678616, 49.7276899923422, 49.8847151942606, 49.7920112943787, 49.5081397146114, 49.2918633073164, 49.1352904471748, 49.3397448231728, 49.4713813499697, 49.3852052435403, 49.5867696788652, 49.4137530585047, 49.1031043568417, 49.4599885580201, 49.1357230365042, 49.1893012571989, 48.7270762056073, 48.3800124679673, 47.9690434191124, 48.0193547288843, 47.6620855703505, 47.6592988835332, 47.726862406458, 47.8668317346629, 47.6293786041021, 47.6842280532209, 47.6053615081546, 47.9308458230391, 47.7807235394881, 47.8294556467246, 47.9006826430557, 48.0113049442773, 48.1605755467172, 47.9961340046721, 47.9019342884565, 47.6471764517754, 47.8725213360129, 47.8329083126244, 47.7377986168352, 47.6512305894323, 47.7256907018078, 47.501976670636, 47.3764237289667, 47.2292952802724, 47.4004820908595, 47.4526174659862, 47.4835950385865, 47.7476950731972, 47.2868487885989, 47.1466018260288, 47.4183383185878, 47.4308266385453, 47.3488381779215, 47.3677901566039, 47.2605645709109, 47.3952135245457, 47.3642401566334, 47.6722018616947, 47.668434910213, 47.6292144787367, 47.3254940958526, 47.2477128773392, 47.2276437542817, 47.4277219359799, 47.6161097730372, 47.6276905335225, 47.6071583256498, 47.6647123051268, 47.7671937777376), )
      .Generic = rollmean
      .Method = rollmean.xts
      .Class = [xts, zoo]
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@79617c3d
      .GenericDefEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@5a6efe33
      .Group = null
      x = <RDoubleVector with 180 elements>
      k = 40.0
      fill = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@638d2ce3, expr=WrapDefaultArgumentNode@6644bdf5, null]
      na.pad = [3, null, expr=ConstantLogicalScalarNode@13cf5f8a, 1]
      align = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@638d2ce3, expr=WrapDefaultArgumentNode@7c9ea1d0, [right, center, left]]
      ... = RArgsValuesAndNames: 
      TempFrameSlot = null
      Visibility = true
Frame(d=8): <no source> (called as: function (x, k, fill = if (na.pad) NA, na.pad = FALSE, align = c()
      x = <RDoubleVector with 180 elements>
      k = 40.0
      fill = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@49cceb19, expr=WrapDefaultArgumentNode@151659dd, null]
      na.pad = [3, null, expr=ConstantLogicalScalarNode@4a58e0e9, 0]
      align = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@49cceb19, expr=WrapDefaultArgumentNode@e8c84eb, null]
      ... = RArgsValuesAndNames: 
      Visibility = null
Frame(d=7): do.call (called as: do.call(fun, c(list(xdata), list(...)), quote = TRUE))
      what = [4, com.oracle.truffle.r.runtime.VirtualEvalFrame$Substitute1@197d5a87, expr=WrapArgumentNode@5d404a3c, <no source>]
      args = [2, com.oracle.truffle.r.runtime.VirtualEvalFrame$Substitute1@197d5a87, expr=WrapArgumentNode@af9dd34, [[50.1177772350145, 50.3976663383861, 50.3323571013133, 50.3345948961691, 50.1811210391819, 49.9...]]
      quote = [2, null, expr=ConstantLogicalScalarNode@48692405, 1]
      envir = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@131d977f, expr=WrapDefaultArgumentNode@774d8276, <environment: 0x616f81b5>]
      Visibility = true
Frame(d=6): <promise>66588044 (called as: try(do.call(fun, c(list(xdata), list(...)), quote = TRUE), silent = TRUE))
      expr = [18, org.graalvm.compiler.truffle.FrameWithoutBoxing@79617c3d, expr=WrapArgumentNode@66048ac4, null]
      silent = [2, null, expr=ConstantLogicalScalarNode@4f525e13, 1]
      outFile = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@4f552aa2, expr=WrapDefaultArgumentNode@4f82663e, null]
      Visibility = true
      2 = <deserialized function>
Frame(d=6): doTryCatch (called as: doTryCatch(return(expr), name, parentenv, handler))
      expr = [18, org.graalvm.compiler.truffle.FrameWithoutBoxing@3c8fe8ad, expr=WrapArgumentNode@2d195ee4, null]
      name = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@3c8fe8ad, expr=WrapArgumentNode@2d6aca33, [error]]
      parentenv = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@3c8fe8ad, expr=WrapArgumentNode@21ab988f, <environment: 0x43d6262c>]
      handler = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@3c8fe8ad, expr=WrapArgumentNode@29314cc9, <deserialized function>]
      Visibility = true
      8 = <deserialized function>
      HandlerStack = type=null, tag=NULL, car=RList, cdr=RPairList
Frame(d=5): tryCatchOne (called as: tryCatchOne(expr, names, parentenv, handlers[[1L]]))
      expr = [16, org.graalvm.compiler.truffle.FrameWithoutBoxing@5e2975ca, expr=WrapArgumentNode@64aad6db, null]
      name = [0, org.graalvm.compiler.truffle.FrameWithoutBoxing@5e2975ca, expr=WrapArgumentNode@ae7950d, [error]]
      parentenv = [0, org.graalvm.compiler.truffle.FrameWithoutBoxing@5e2975ca, expr=WrapArgumentNode@60d1b21f, <environment: 0x43d6262c>]
      handler = [2, org.graalvm.compiler.truffle.FrameWithoutBoxing@5e2975ca, expr=WrapArgumentNode@66c83fc8, <deserialized function>]
      Visibility = true
      doTryCatch = doTryCatch
Frame(d=4): tryCatchList <split-5e95b0ab> (called as: tryCatchList(expr, classes, parentenv, handlers))
      expr = [0, org.graalvm.compiler.truffle.FrameWithoutBoxing@38cf4497, expr=WrapArgumentNode@79767781, null]
      names = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@38cf4497, expr=WrapArgumentNode@78411116, [error]]
      parentenv = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@38cf4497, expr=WrapArgumentNode@aced190, <environment: 0x43d6262c>]
      handlers = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@38cf4497, expr=WrapArgumentNode@245a060f, [<deserialized function>]]
      Visibility = true
      TempFrameSlot = null
      nh = 1
      8 = <deserialized function>
Frame(d=3): tryCatch (called as: tryCatch(expr, error = function(e) {)
      expr = [16, org.graalvm.compiler.truffle.FrameWithoutBoxing@4f552aa2, expr=WrapArgumentNode@3f80d8c, null]
      ... = RArgsValuesAndNames: error = [2, org.graalvm.compiler.truffle.FrameWithoutBoxing@4f552aa2, expr=WrapArgumentNode@2d3b0978, <deserialized function>]
      finally = missing
      Visibility = true
      tryCatchList = tryCatchList
      tryCatchOne = tryCatchOne
      handlers = [<deserialized function>]
      TempFrameSlot = null
      classes = [error]
      parentenv = <environment: 0x43d6262c>
Frame(d=2): try <split-1f75fd1d> (called as: try(do.call(fun, c(list(xdata), list(...)), quote = TRUE), silent = TRUE))
      expr = [18, org.graalvm.compiler.truffle.FrameWithoutBoxing@79617c3d, expr=WrapArgumentNode@66048ac4, null]
      silent = [2, null, expr=ConstantLogicalScalarNode@4f525e13, 1]
      outFile = [3, org.graalvm.compiler.truffle.FrameWithoutBoxing@4f552aa2, expr=WrapDefaultArgumentNode@4f82663e, null]
      Visibility = true
      2 = <deserialized function>
Frame(d=1): addPanel (called as: addPanel(rollmean, k = 40, col = "blue", on = 1))
      FUN = [2, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@3b56947a, <no source>]
      main = [3, null, expr=ConstantObjectNode@6eaf030c, ]
      on = [2, null, expr=ConstantDoubleScalarNode@1926f962, 1.0]
      type = [3, null, expr=ConstantObjectNode@1f4d38f9, l]
      col = [2, null, expr=ConstantObjectNode@62794582, blue]
      lty = [3, null, expr=ConstantDoubleScalarNode@7a3a49e5, 1.0]
      lwd = [3, null, expr=ConstantDoubleScalarNode@6c1b82cd, 1.0]
      pch = [3, null, expr=ConstantDoubleScalarNode@acd3460, 0.0]
      ... = RArgsValuesAndNames: k = [2, null, expr=ConstantDoubleScalarNode@c82ad22, 40.0]
      Visibility = true
      chob = <environment: 0x1b485c8b>
      TempFrameSlot = null
      xdata = <RDoubleVector with 180 elements>
      1 = null
      fun = <no source>
      .formals = type=null, tag=x, car=RSymbol, cdr=RPairList
      *rhs*0 = null
      *tmp*0 = null
Frame(d=0): <repl wrapper> (called as: <invalid call>)
      Visibility = true
      .Random.seed = active binding
      pkgname = null
      sample_matrix = <RDoubleVector with 720 elements>
      sample.xts = <RDoubleVector with 720 elements>
      calcReturns = calcReturns
      TempFrameSlot = null
<empty frame>

> 
> 
> 
> cleanEx()
> nameEx("align.time")
> ### * align.time
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: align.time
> ### Title: Align seconds, minutes, and hours to beginning of next period.
> ### Aliases: align.time align.time.xts adj.time shift.time
> ### Keywords: chron manip ts misc
> 
> ### ** Examples
> 
> x <- Sys.time() + 1:1000
> 
> # every 10 seconds
> align.time(x, 10)
   [1] "2017-12-04 13:34:20 UTC" "2017-12-04 13:34:20 UTC"
   [3] "2017-12-04 13:34:20 UTC" "2017-12-04 13:34:20 UTC"
   [5] "2017-12-04 13:34:20 UTC" "2017-12-04 13:34:30 UTC"
   [7] "2017-12-04 13:34:30 UTC" "2017-12-04 13:34:30 UTC"
   [9] "2017-12-04 13:34:30 UTC" "2017-12-04 13:34:30 UTC"
  [11] "2017-12-04 13:34:30 UTC" "2017-12-04 13:34:30 UTC"
  [13] "2017-12-04 13:34:30 UTC" "2017-12-04 13:34:30 UTC"
  [15] "2017-12-04 13:34:30 UTC" "2017-12-04 13:34:40 UTC"
  [17] "2017-12-04 13:34:40 UTC" "2017-12-04 13:34:40 UTC"
  [19] "2017-12-04 13:34:40 UTC" "2017-12-04 13:34:40 UTC"
  [21] "2017-12-04 13:34:40 UTC" "2017-12-04 13:34:40 UTC"
  [23] "2017-12-04 13:34:40 UTC" "2017-12-04 13:34:40 UTC"
  [25] "2017-12-04 13:34:40 UTC" "2017-12-04 13:34:50 UTC"
  [27] "2017-12-04 13:34:50 UTC" "2017-12-04 13:34:50 UTC"
  [29] "2017-12-04 13:34:50 UTC" "2017-12-04 13:34:50 UTC"
  [31] "2017-12-04 13:34:50 UTC" "2017-12-04 13:34:50 UTC"
  [33] "2017-12-04 13:34:50 UTC" "2017-12-04 13:34:50 UTC"
  [35] "2017-12-04 13:34:50 UTC" "2017-12-04 13:35:00 UTC"
  [37] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [39] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [41] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [43] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [45] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:10 UTC"
  [47] "2017-12-04 13:35:10 UTC" "2017-12-04 13:35:10 UTC"
  [49] "2017-12-04 13:35:10 UTC" "2017-12-04 13:35:10 UTC"
  [51] "2017-12-04 13:35:10 UTC" "2017-12-04 13:35:10 UTC"
  [53] "2017-12-04 13:35:10 UTC" "2017-12-04 13:35:10 UTC"
  [55] "2017-12-04 13:35:10 UTC" "2017-12-04 13:35:20 UTC"
  [57] "2017-12-04 13:35:20 UTC" "2017-12-04 13:35:20 UTC"
  [59] "2017-12-04 13:35:20 UTC" "2017-12-04 13:35:20 UTC"
  [61] "2017-12-04 13:35:20 UTC" "2017-12-04 13:35:20 UTC"
  [63] "2017-12-04 13:35:20 UTC" "2017-12-04 13:35:20 UTC"
  [65] "2017-12-04 13:35:20 UTC" "2017-12-04 13:35:30 UTC"
  [67] "2017-12-04 13:35:30 UTC" "2017-12-04 13:35:30 UTC"
  [69] "2017-12-04 13:35:30 UTC" "2017-12-04 13:35:30 UTC"
  [71] "2017-12-04 13:35:30 UTC" "2017-12-04 13:35:30 UTC"
  [73] "2017-12-04 13:35:30 UTC" "2017-12-04 13:35:30 UTC"
  [75] "2017-12-04 13:35:30 UTC" "2017-12-04 13:35:40 UTC"
  [77] "2017-12-04 13:35:40 UTC" "2017-12-04 13:35:40 UTC"
  [79] "2017-12-04 13:35:40 UTC" "2017-12-04 13:35:40 UTC"
  [81] "2017-12-04 13:35:40 UTC" "2017-12-04 13:35:40 UTC"
  [83] "2017-12-04 13:35:40 UTC" "2017-12-04 13:35:40 UTC"
  [85] "2017-12-04 13:35:40 UTC" "2017-12-04 13:35:50 UTC"
  [87] "2017-12-04 13:35:50 UTC" "2017-12-04 13:35:50 UTC"
  [89] "2017-12-04 13:35:50 UTC" "2017-12-04 13:35:50 UTC"
  [91] "2017-12-04 13:35:50 UTC" "2017-12-04 13:35:50 UTC"
  [93] "2017-12-04 13:35:50 UTC" "2017-12-04 13:35:50 UTC"
  [95] "2017-12-04 13:35:50 UTC" "2017-12-04 13:36:00 UTC"
  [97] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [99] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
 [101] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
 [103] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
 [105] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:10 UTC"
 [107] "2017-12-04 13:36:10 UTC" "2017-12-04 13:36:10 UTC"
 [109] "2017-12-04 13:36:10 UTC" "2017-12-04 13:36:10 UTC"
 [111] "2017-12-04 13:36:10 UTC" "2017-12-04 13:36:10 UTC"
 [113] "2017-12-04 13:36:10 UTC" "2017-12-04 13:36:10 UTC"
 [115] "2017-12-04 13:36:10 UTC" "2017-12-04 13:36:20 UTC"
 [117] "2017-12-04 13:36:20 UTC" "2017-12-04 13:36:20 UTC"
 [119] "2017-12-04 13:36:20 UTC" "2017-12-04 13:36:20 UTC"
 [121] "2017-12-04 13:36:20 UTC" "2017-12-04 13:36:20 UTC"
 [123] "2017-12-04 13:36:20 UTC" "2017-12-04 13:36:20 UTC"
 [125] "2017-12-04 13:36:20 UTC" "2017-12-04 13:36:30 UTC"
 [127] "2017-12-04 13:36:30 UTC" "2017-12-04 13:36:30 UTC"
 [129] "2017-12-04 13:36:30 UTC" "2017-12-04 13:36:30 UTC"
 [131] "2017-12-04 13:36:30 UTC" "2017-12-04 13:36:30 UTC"
 [133] "2017-12-04 13:36:30 UTC" "2017-12-04 13:36:30 UTC"
 [135] "2017-12-04 13:36:30 UTC" "2017-12-04 13:36:40 UTC"
 [137] "2017-12-04 13:36:40 UTC" "2017-12-04 13:36:40 UTC"
 [139] "2017-12-04 13:36:40 UTC" "2017-12-04 13:36:40 UTC"
 [141] "2017-12-04 13:36:40 UTC" "2017-12-04 13:36:40 UTC"
 [143] "2017-12-04 13:36:40 UTC" "2017-12-04 13:36:40 UTC"
 [145] "2017-12-04 13:36:40 UTC" "2017-12-04 13:36:50 UTC"
 [147] "2017-12-04 13:36:50 UTC" "2017-12-04 13:36:50 UTC"
 [149] "2017-12-04 13:36:50 UTC" "2017-12-04 13:36:50 UTC"
 [151] "2017-12-04 13:36:50 UTC" "2017-12-04 13:36:50 UTC"
 [153] "2017-12-04 13:36:50 UTC" "2017-12-04 13:36:50 UTC"
 [155] "2017-12-04 13:36:50 UTC" "2017-12-04 13:37:00 UTC"
 [157] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [159] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [161] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [163] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [165] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:10 UTC"
 [167] "2017-12-04 13:37:10 UTC" "2017-12-04 13:37:10 UTC"
 [169] "2017-12-04 13:37:10 UTC" "2017-12-04 13:37:10 UTC"
 [171] "2017-12-04 13:37:10 UTC" "2017-12-04 13:37:10 UTC"
 [173] "2017-12-04 13:37:10 UTC" "2017-12-04 13:37:10 UTC"
 [175] "2017-12-04 13:37:10 UTC" "2017-12-04 13:37:20 UTC"
 [177] "2017-12-04 13:37:20 UTC" "2017-12-04 13:37:20 UTC"
 [179] "2017-12-04 13:37:20 UTC" "2017-12-04 13:37:20 UTC"
 [181] "2017-12-04 13:37:20 UTC" "2017-12-04 13:37:20 UTC"
 [183] "2017-12-04 13:37:20 UTC" "2017-12-04 13:37:20 UTC"
 [185] "2017-12-04 13:37:20 UTC" "2017-12-04 13:37:30 UTC"
 [187] "2017-12-04 13:37:30 UTC" "2017-12-04 13:37:30 UTC"
 [189] "2017-12-04 13:37:30 UTC" "2017-12-04 13:37:30 UTC"
 [191] "2017-12-04 13:37:30 UTC" "2017-12-04 13:37:30 UTC"
 [193] "2017-12-04 13:37:30 UTC" "2017-12-04 13:37:30 UTC"
 [195] "2017-12-04 13:37:30 UTC" "2017-12-04 13:37:40 UTC"
 [197] "2017-12-04 13:37:40 UTC" "2017-12-04 13:37:40 UTC"
 [199] "2017-12-04 13:37:40 UTC" "2017-12-04 13:37:40 UTC"
 [201] "2017-12-04 13:37:40 UTC" "2017-12-04 13:37:40 UTC"
 [203] "2017-12-04 13:37:40 UTC" "2017-12-04 13:37:40 UTC"
 [205] "2017-12-04 13:37:40 UTC" "2017-12-04 13:37:50 UTC"
 [207] "2017-12-04 13:37:50 UTC" "2017-12-04 13:37:50 UTC"
 [209] "2017-12-04 13:37:50 UTC" "2017-12-04 13:37:50 UTC"
 [211] "2017-12-04 13:37:50 UTC" "2017-12-04 13:37:50 UTC"
 [213] "2017-12-04 13:37:50 UTC" "2017-12-04 13:37:50 UTC"
 [215] "2017-12-04 13:37:50 UTC" "2017-12-04 13:38:00 UTC"
 [217] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [219] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [221] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [223] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [225] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:10 UTC"
 [227] "2017-12-04 13:38:10 UTC" "2017-12-04 13:38:10 UTC"
 [229] "2017-12-04 13:38:10 UTC" "2017-12-04 13:38:10 UTC"
 [231] "2017-12-04 13:38:10 UTC" "2017-12-04 13:38:10 UTC"
 [233] "2017-12-04 13:38:10 UTC" "2017-12-04 13:38:10 UTC"
 [235] "2017-12-04 13:38:10 UTC" "2017-12-04 13:38:20 UTC"
 [237] "2017-12-04 13:38:20 UTC" "2017-12-04 13:38:20 UTC"
 [239] "2017-12-04 13:38:20 UTC" "2017-12-04 13:38:20 UTC"
 [241] "2017-12-04 13:38:20 UTC" "2017-12-04 13:38:20 UTC"
 [243] "2017-12-04 13:38:20 UTC" "2017-12-04 13:38:20 UTC"
 [245] "2017-12-04 13:38:20 UTC" "2017-12-04 13:38:30 UTC"
 [247] "2017-12-04 13:38:30 UTC" "2017-12-04 13:38:30 UTC"
 [249] "2017-12-04 13:38:30 UTC" "2017-12-04 13:38:30 UTC"
 [251] "2017-12-04 13:38:30 UTC" "2017-12-04 13:38:30 UTC"
 [253] "2017-12-04 13:38:30 UTC" "2017-12-04 13:38:30 UTC"
 [255] "2017-12-04 13:38:30 UTC" "2017-12-04 13:38:40 UTC"
 [257] "2017-12-04 13:38:40 UTC" "2017-12-04 13:38:40 UTC"
 [259] "2017-12-04 13:38:40 UTC" "2017-12-04 13:38:40 UTC"
 [261] "2017-12-04 13:38:40 UTC" "2017-12-04 13:38:40 UTC"
 [263] "2017-12-04 13:38:40 UTC" "2017-12-04 13:38:40 UTC"
 [265] "2017-12-04 13:38:40 UTC" "2017-12-04 13:38:50 UTC"
 [267] "2017-12-04 13:38:50 UTC" "2017-12-04 13:38:50 UTC"
 [269] "2017-12-04 13:38:50 UTC" "2017-12-04 13:38:50 UTC"
 [271] "2017-12-04 13:38:50 UTC" "2017-12-04 13:38:50 UTC"
 [273] "2017-12-04 13:38:50 UTC" "2017-12-04 13:38:50 UTC"
 [275] "2017-12-04 13:38:50 UTC" "2017-12-04 13:39:00 UTC"
 [277] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [279] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [281] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [283] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [285] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:10 UTC"
 [287] "2017-12-04 13:39:10 UTC" "2017-12-04 13:39:10 UTC"
 [289] "2017-12-04 13:39:10 UTC" "2017-12-04 13:39:10 UTC"
 [291] "2017-12-04 13:39:10 UTC" "2017-12-04 13:39:10 UTC"
 [293] "2017-12-04 13:39:10 UTC" "2017-12-04 13:39:10 UTC"
 [295] "2017-12-04 13:39:10 UTC" "2017-12-04 13:39:20 UTC"
 [297] "2017-12-04 13:39:20 UTC" "2017-12-04 13:39:20 UTC"
 [299] "2017-12-04 13:39:20 UTC" "2017-12-04 13:39:20 UTC"
 [301] "2017-12-04 13:39:20 UTC" "2017-12-04 13:39:20 UTC"
 [303] "2017-12-04 13:39:20 UTC" "2017-12-04 13:39:20 UTC"
 [305] "2017-12-04 13:39:20 UTC" "2017-12-04 13:39:30 UTC"
 [307] "2017-12-04 13:39:30 UTC" "2017-12-04 13:39:30 UTC"
 [309] "2017-12-04 13:39:30 UTC" "2017-12-04 13:39:30 UTC"
 [311] "2017-12-04 13:39:30 UTC" "2017-12-04 13:39:30 UTC"
 [313] "2017-12-04 13:39:30 UTC" "2017-12-04 13:39:30 UTC"
 [315] "2017-12-04 13:39:30 UTC" "2017-12-04 13:39:40 UTC"
 [317] "2017-12-04 13:39:40 UTC" "2017-12-04 13:39:40 UTC"
 [319] "2017-12-04 13:39:40 UTC" "2017-12-04 13:39:40 UTC"
 [321] "2017-12-04 13:39:40 UTC" "2017-12-04 13:39:40 UTC"
 [323] "2017-12-04 13:39:40 UTC" "2017-12-04 13:39:40 UTC"
 [325] "2017-12-04 13:39:40 UTC" "2017-12-04 13:39:50 UTC"
 [327] "2017-12-04 13:39:50 UTC" "2017-12-04 13:39:50 UTC"
 [329] "2017-12-04 13:39:50 UTC" "2017-12-04 13:39:50 UTC"
 [331] "2017-12-04 13:39:50 UTC" "2017-12-04 13:39:50 UTC"
 [333] "2017-12-04 13:39:50 UTC" "2017-12-04 13:39:50 UTC"
 [335] "2017-12-04 13:39:50 UTC" "2017-12-04 13:40:00 UTC"
 [337] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [339] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [341] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [343] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [345] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:10 UTC"
 [347] "2017-12-04 13:40:10 UTC" "2017-12-04 13:40:10 UTC"
 [349] "2017-12-04 13:40:10 UTC" "2017-12-04 13:40:10 UTC"
 [351] "2017-12-04 13:40:10 UTC" "2017-12-04 13:40:10 UTC"
 [353] "2017-12-04 13:40:10 UTC" "2017-12-04 13:40:10 UTC"
 [355] "2017-12-04 13:40:10 UTC" "2017-12-04 13:40:20 UTC"
 [357] "2017-12-04 13:40:20 UTC" "2017-12-04 13:40:20 UTC"
 [359] "2017-12-04 13:40:20 UTC" "2017-12-04 13:40:20 UTC"
 [361] "2017-12-04 13:40:20 UTC" "2017-12-04 13:40:20 UTC"
 [363] "2017-12-04 13:40:20 UTC" "2017-12-04 13:40:20 UTC"
 [365] "2017-12-04 13:40:20 UTC" "2017-12-04 13:40:30 UTC"
 [367] "2017-12-04 13:40:30 UTC" "2017-12-04 13:40:30 UTC"
 [369] "2017-12-04 13:40:30 UTC" "2017-12-04 13:40:30 UTC"
 [371] "2017-12-04 13:40:30 UTC" "2017-12-04 13:40:30 UTC"
 [373] "2017-12-04 13:40:30 UTC" "2017-12-04 13:40:30 UTC"
 [375] "2017-12-04 13:40:30 UTC" "2017-12-04 13:40:40 UTC"
 [377] "2017-12-04 13:40:40 UTC" "2017-12-04 13:40:40 UTC"
 [379] "2017-12-04 13:40:40 UTC" "2017-12-04 13:40:40 UTC"
 [381] "2017-12-04 13:40:40 UTC" "2017-12-04 13:40:40 UTC"
 [383] "2017-12-04 13:40:40 UTC" "2017-12-04 13:40:40 UTC"
 [385] "2017-12-04 13:40:40 UTC" "2017-12-04 13:40:50 UTC"
 [387] "2017-12-04 13:40:50 UTC" "2017-12-04 13:40:50 UTC"
 [389] "2017-12-04 13:40:50 UTC" "2017-12-04 13:40:50 UTC"
 [391] "2017-12-04 13:40:50 UTC" "2017-12-04 13:40:50 UTC"
 [393] "2017-12-04 13:40:50 UTC" "2017-12-04 13:40:50 UTC"
 [395] "2017-12-04 13:40:50 UTC" "2017-12-04 13:41:00 UTC"
 [397] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [399] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [401] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [403] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [405] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:10 UTC"
 [407] "2017-12-04 13:41:10 UTC" "2017-12-04 13:41:10 UTC"
 [409] "2017-12-04 13:41:10 UTC" "2017-12-04 13:41:10 UTC"
 [411] "2017-12-04 13:41:10 UTC" "2017-12-04 13:41:10 UTC"
 [413] "2017-12-04 13:41:10 UTC" "2017-12-04 13:41:10 UTC"
 [415] "2017-12-04 13:41:10 UTC" "2017-12-04 13:41:20 UTC"
 [417] "2017-12-04 13:41:20 UTC" "2017-12-04 13:41:20 UTC"
 [419] "2017-12-04 13:41:20 UTC" "2017-12-04 13:41:20 UTC"
 [421] "2017-12-04 13:41:20 UTC" "2017-12-04 13:41:20 UTC"
 [423] "2017-12-04 13:41:20 UTC" "2017-12-04 13:41:20 UTC"
 [425] "2017-12-04 13:41:20 UTC" "2017-12-04 13:41:30 UTC"
 [427] "2017-12-04 13:41:30 UTC" "2017-12-04 13:41:30 UTC"
 [429] "2017-12-04 13:41:30 UTC" "2017-12-04 13:41:30 UTC"
 [431] "2017-12-04 13:41:30 UTC" "2017-12-04 13:41:30 UTC"
 [433] "2017-12-04 13:41:30 UTC" "2017-12-04 13:41:30 UTC"
 [435] "2017-12-04 13:41:30 UTC" "2017-12-04 13:41:40 UTC"
 [437] "2017-12-04 13:41:40 UTC" "2017-12-04 13:41:40 UTC"
 [439] "2017-12-04 13:41:40 UTC" "2017-12-04 13:41:40 UTC"
 [441] "2017-12-04 13:41:40 UTC" "2017-12-04 13:41:40 UTC"
 [443] "2017-12-04 13:41:40 UTC" "2017-12-04 13:41:40 UTC"
 [445] "2017-12-04 13:41:40 UTC" "2017-12-04 13:41:50 UTC"
 [447] "2017-12-04 13:41:50 UTC" "2017-12-04 13:41:50 UTC"
 [449] "2017-12-04 13:41:50 UTC" "2017-12-04 13:41:50 UTC"
 [451] "2017-12-04 13:41:50 UTC" "2017-12-04 13:41:50 UTC"
 [453] "2017-12-04 13:41:50 UTC" "2017-12-04 13:41:50 UTC"
 [455] "2017-12-04 13:41:50 UTC" "2017-12-04 13:42:00 UTC"
 [457] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [459] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [461] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [463] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [465] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:10 UTC"
 [467] "2017-12-04 13:42:10 UTC" "2017-12-04 13:42:10 UTC"
 [469] "2017-12-04 13:42:10 UTC" "2017-12-04 13:42:10 UTC"
 [471] "2017-12-04 13:42:10 UTC" "2017-12-04 13:42:10 UTC"
 [473] "2017-12-04 13:42:10 UTC" "2017-12-04 13:42:10 UTC"
 [475] "2017-12-04 13:42:10 UTC" "2017-12-04 13:42:20 UTC"
 [477] "2017-12-04 13:42:20 UTC" "2017-12-04 13:42:20 UTC"
 [479] "2017-12-04 13:42:20 UTC" "2017-12-04 13:42:20 UTC"
 [481] "2017-12-04 13:42:20 UTC" "2017-12-04 13:42:20 UTC"
 [483] "2017-12-04 13:42:20 UTC" "2017-12-04 13:42:20 UTC"
 [485] "2017-12-04 13:42:20 UTC" "2017-12-04 13:42:30 UTC"
 [487] "2017-12-04 13:42:30 UTC" "2017-12-04 13:42:30 UTC"
 [489] "2017-12-04 13:42:30 UTC" "2017-12-04 13:42:30 UTC"
 [491] "2017-12-04 13:42:30 UTC" "2017-12-04 13:42:30 UTC"
 [493] "2017-12-04 13:42:30 UTC" "2017-12-04 13:42:30 UTC"
 [495] "2017-12-04 13:42:30 UTC" "2017-12-04 13:42:40 UTC"
 [497] "2017-12-04 13:42:40 UTC" "2017-12-04 13:42:40 UTC"
 [499] "2017-12-04 13:42:40 UTC" "2017-12-04 13:42:40 UTC"
 [501] "2017-12-04 13:42:40 UTC" "2017-12-04 13:42:40 UTC"
 [503] "2017-12-04 13:42:40 UTC" "2017-12-04 13:42:40 UTC"
 [505] "2017-12-04 13:42:40 UTC" "2017-12-04 13:42:50 UTC"
 [507] "2017-12-04 13:42:50 UTC" "2017-12-04 13:42:50 UTC"
 [509] "2017-12-04 13:42:50 UTC" "2017-12-04 13:42:50 UTC"
 [511] "2017-12-04 13:42:50 UTC" "2017-12-04 13:42:50 UTC"
 [513] "2017-12-04 13:42:50 UTC" "2017-12-04 13:42:50 UTC"
 [515] "2017-12-04 13:42:50 UTC" "2017-12-04 13:43:00 UTC"
 [517] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [519] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [521] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [523] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [525] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:10 UTC"
 [527] "2017-12-04 13:43:10 UTC" "2017-12-04 13:43:10 UTC"
 [529] "2017-12-04 13:43:10 UTC" "2017-12-04 13:43:10 UTC"
 [531] "2017-12-04 13:43:10 UTC" "2017-12-04 13:43:10 UTC"
 [533] "2017-12-04 13:43:10 UTC" "2017-12-04 13:43:10 UTC"
 [535] "2017-12-04 13:43:10 UTC" "2017-12-04 13:43:20 UTC"
 [537] "2017-12-04 13:43:20 UTC" "2017-12-04 13:43:20 UTC"
 [539] "2017-12-04 13:43:20 UTC" "2017-12-04 13:43:20 UTC"
 [541] "2017-12-04 13:43:20 UTC" "2017-12-04 13:43:20 UTC"
 [543] "2017-12-04 13:43:20 UTC" "2017-12-04 13:43:20 UTC"
 [545] "2017-12-04 13:43:20 UTC" "2017-12-04 13:43:30 UTC"
 [547] "2017-12-04 13:43:30 UTC" "2017-12-04 13:43:30 UTC"
 [549] "2017-12-04 13:43:30 UTC" "2017-12-04 13:43:30 UTC"
 [551] "2017-12-04 13:43:30 UTC" "2017-12-04 13:43:30 UTC"
 [553] "2017-12-04 13:43:30 UTC" "2017-12-04 13:43:30 UTC"
 [555] "2017-12-04 13:43:30 UTC" "2017-12-04 13:43:40 UTC"
 [557] "2017-12-04 13:43:40 UTC" "2017-12-04 13:43:40 UTC"
 [559] "2017-12-04 13:43:40 UTC" "2017-12-04 13:43:40 UTC"
 [561] "2017-12-04 13:43:40 UTC" "2017-12-04 13:43:40 UTC"
 [563] "2017-12-04 13:43:40 UTC" "2017-12-04 13:43:40 UTC"
 [565] "2017-12-04 13:43:40 UTC" "2017-12-04 13:43:50 UTC"
 [567] "2017-12-04 13:43:50 UTC" "2017-12-04 13:43:50 UTC"
 [569] "2017-12-04 13:43:50 UTC" "2017-12-04 13:43:50 UTC"
 [571] "2017-12-04 13:43:50 UTC" "2017-12-04 13:43:50 UTC"
 [573] "2017-12-04 13:43:50 UTC" "2017-12-04 13:43:50 UTC"
 [575] "2017-12-04 13:43:50 UTC" "2017-12-04 13:44:00 UTC"
 [577] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [579] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [581] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [583] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [585] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:10 UTC"
 [587] "2017-12-04 13:44:10 UTC" "2017-12-04 13:44:10 UTC"
 [589] "2017-12-04 13:44:10 UTC" "2017-12-04 13:44:10 UTC"
 [591] "2017-12-04 13:44:10 UTC" "2017-12-04 13:44:10 UTC"
 [593] "2017-12-04 13:44:10 UTC" "2017-12-04 13:44:10 UTC"
 [595] "2017-12-04 13:44:10 UTC" "2017-12-04 13:44:20 UTC"
 [597] "2017-12-04 13:44:20 UTC" "2017-12-04 13:44:20 UTC"
 [599] "2017-12-04 13:44:20 UTC" "2017-12-04 13:44:20 UTC"
 [601] "2017-12-04 13:44:20 UTC" "2017-12-04 13:44:20 UTC"
 [603] "2017-12-04 13:44:20 UTC" "2017-12-04 13:44:20 UTC"
 [605] "2017-12-04 13:44:20 UTC" "2017-12-04 13:44:30 UTC"
 [607] "2017-12-04 13:44:30 UTC" "2017-12-04 13:44:30 UTC"
 [609] "2017-12-04 13:44:30 UTC" "2017-12-04 13:44:30 UTC"
 [611] "2017-12-04 13:44:30 UTC" "2017-12-04 13:44:30 UTC"
 [613] "2017-12-04 13:44:30 UTC" "2017-12-04 13:44:30 UTC"
 [615] "2017-12-04 13:44:30 UTC" "2017-12-04 13:44:40 UTC"
 [617] "2017-12-04 13:44:40 UTC" "2017-12-04 13:44:40 UTC"
 [619] "2017-12-04 13:44:40 UTC" "2017-12-04 13:44:40 UTC"
 [621] "2017-12-04 13:44:40 UTC" "2017-12-04 13:44:40 UTC"
 [623] "2017-12-04 13:44:40 UTC" "2017-12-04 13:44:40 UTC"
 [625] "2017-12-04 13:44:40 UTC" "2017-12-04 13:44:50 UTC"
 [627] "2017-12-04 13:44:50 UTC" "2017-12-04 13:44:50 UTC"
 [629] "2017-12-04 13:44:50 UTC" "2017-12-04 13:44:50 UTC"
 [631] "2017-12-04 13:44:50 UTC" "2017-12-04 13:44:50 UTC"
 [633] "2017-12-04 13:44:50 UTC" "2017-12-04 13:44:50 UTC"
 [635] "2017-12-04 13:44:50 UTC" "2017-12-04 13:45:00 UTC"
 [637] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [639] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [641] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [643] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [645] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:10 UTC"
 [647] "2017-12-04 13:45:10 UTC" "2017-12-04 13:45:10 UTC"
 [649] "2017-12-04 13:45:10 UTC" "2017-12-04 13:45:10 UTC"
 [651] "2017-12-04 13:45:10 UTC" "2017-12-04 13:45:10 UTC"
 [653] "2017-12-04 13:45:10 UTC" "2017-12-04 13:45:10 UTC"
 [655] "2017-12-04 13:45:10 UTC" "2017-12-04 13:45:20 UTC"
 [657] "2017-12-04 13:45:20 UTC" "2017-12-04 13:45:20 UTC"
 [659] "2017-12-04 13:45:20 UTC" "2017-12-04 13:45:20 UTC"
 [661] "2017-12-04 13:45:20 UTC" "2017-12-04 13:45:20 UTC"
 [663] "2017-12-04 13:45:20 UTC" "2017-12-04 13:45:20 UTC"
 [665] "2017-12-04 13:45:20 UTC" "2017-12-04 13:45:30 UTC"
 [667] "2017-12-04 13:45:30 UTC" "2017-12-04 13:45:30 UTC"
 [669] "2017-12-04 13:45:30 UTC" "2017-12-04 13:45:30 UTC"
 [671] "2017-12-04 13:45:30 UTC" "2017-12-04 13:45:30 UTC"
 [673] "2017-12-04 13:45:30 UTC" "2017-12-04 13:45:30 UTC"
 [675] "2017-12-04 13:45:30 UTC" "2017-12-04 13:45:40 UTC"
 [677] "2017-12-04 13:45:40 UTC" "2017-12-04 13:45:40 UTC"
 [679] "2017-12-04 13:45:40 UTC" "2017-12-04 13:45:40 UTC"
 [681] "2017-12-04 13:45:40 UTC" "2017-12-04 13:45:40 UTC"
 [683] "2017-12-04 13:45:40 UTC" "2017-12-04 13:45:40 UTC"
 [685] "2017-12-04 13:45:40 UTC" "2017-12-04 13:45:50 UTC"
 [687] "2017-12-04 13:45:50 UTC" "2017-12-04 13:45:50 UTC"
 [689] "2017-12-04 13:45:50 UTC" "2017-12-04 13:45:50 UTC"
 [691] "2017-12-04 13:45:50 UTC" "2017-12-04 13:45:50 UTC"
 [693] "2017-12-04 13:45:50 UTC" "2017-12-04 13:45:50 UTC"
 [695] "2017-12-04 13:45:50 UTC" "2017-12-04 13:46:00 UTC"
 [697] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [699] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [701] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [703] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [705] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:10 UTC"
 [707] "2017-12-04 13:46:10 UTC" "2017-12-04 13:46:10 UTC"
 [709] "2017-12-04 13:46:10 UTC" "2017-12-04 13:46:10 UTC"
 [711] "2017-12-04 13:46:10 UTC" "2017-12-04 13:46:10 UTC"
 [713] "2017-12-04 13:46:10 UTC" "2017-12-04 13:46:10 UTC"
 [715] "2017-12-04 13:46:10 UTC" "2017-12-04 13:46:20 UTC"
 [717] "2017-12-04 13:46:20 UTC" "2017-12-04 13:46:20 UTC"
 [719] "2017-12-04 13:46:20 UTC" "2017-12-04 13:46:20 UTC"
 [721] "2017-12-04 13:46:20 UTC" "2017-12-04 13:46:20 UTC"
 [723] "2017-12-04 13:46:20 UTC" "2017-12-04 13:46:20 UTC"
 [725] "2017-12-04 13:46:20 UTC" "2017-12-04 13:46:30 UTC"
 [727] "2017-12-04 13:46:30 UTC" "2017-12-04 13:46:30 UTC"
 [729] "2017-12-04 13:46:30 UTC" "2017-12-04 13:46:30 UTC"
 [731] "2017-12-04 13:46:30 UTC" "2017-12-04 13:46:30 UTC"
 [733] "2017-12-04 13:46:30 UTC" "2017-12-04 13:46:30 UTC"
 [735] "2017-12-04 13:46:30 UTC" "2017-12-04 13:46:40 UTC"
 [737] "2017-12-04 13:46:40 UTC" "2017-12-04 13:46:40 UTC"
 [739] "2017-12-04 13:46:40 UTC" "2017-12-04 13:46:40 UTC"
 [741] "2017-12-04 13:46:40 UTC" "2017-12-04 13:46:40 UTC"
 [743] "2017-12-04 13:46:40 UTC" "2017-12-04 13:46:40 UTC"
 [745] "2017-12-04 13:46:40 UTC" "2017-12-04 13:46:50 UTC"
 [747] "2017-12-04 13:46:50 UTC" "2017-12-04 13:46:50 UTC"
 [749] "2017-12-04 13:46:50 UTC" "2017-12-04 13:46:50 UTC"
 [751] "2017-12-04 13:46:50 UTC" "2017-12-04 13:46:50 UTC"
 [753] "2017-12-04 13:46:50 UTC" "2017-12-04 13:46:50 UTC"
 [755] "2017-12-04 13:46:50 UTC" "2017-12-04 13:47:00 UTC"
 [757] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [759] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [761] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [763] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [765] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:10 UTC"
 [767] "2017-12-04 13:47:10 UTC" "2017-12-04 13:47:10 UTC"
 [769] "2017-12-04 13:47:10 UTC" "2017-12-04 13:47:10 UTC"
 [771] "2017-12-04 13:47:10 UTC" "2017-12-04 13:47:10 UTC"
 [773] "2017-12-04 13:47:10 UTC" "2017-12-04 13:47:10 UTC"
 [775] "2017-12-04 13:47:10 UTC" "2017-12-04 13:47:20 UTC"
 [777] "2017-12-04 13:47:20 UTC" "2017-12-04 13:47:20 UTC"
 [779] "2017-12-04 13:47:20 UTC" "2017-12-04 13:47:20 UTC"
 [781] "2017-12-04 13:47:20 UTC" "2017-12-04 13:47:20 UTC"
 [783] "2017-12-04 13:47:20 UTC" "2017-12-04 13:47:20 UTC"
 [785] "2017-12-04 13:47:20 UTC" "2017-12-04 13:47:30 UTC"
 [787] "2017-12-04 13:47:30 UTC" "2017-12-04 13:47:30 UTC"
 [789] "2017-12-04 13:47:30 UTC" "2017-12-04 13:47:30 UTC"
 [791] "2017-12-04 13:47:30 UTC" "2017-12-04 13:47:30 UTC"
 [793] "2017-12-04 13:47:30 UTC" "2017-12-04 13:47:30 UTC"
 [795] "2017-12-04 13:47:30 UTC" "2017-12-04 13:47:40 UTC"
 [797] "2017-12-04 13:47:40 UTC" "2017-12-04 13:47:40 UTC"
 [799] "2017-12-04 13:47:40 UTC" "2017-12-04 13:47:40 UTC"
 [801] "2017-12-04 13:47:40 UTC" "2017-12-04 13:47:40 UTC"
 [803] "2017-12-04 13:47:40 UTC" "2017-12-04 13:47:40 UTC"
 [805] "2017-12-04 13:47:40 UTC" "2017-12-04 13:47:50 UTC"
 [807] "2017-12-04 13:47:50 UTC" "2017-12-04 13:47:50 UTC"
 [809] "2017-12-04 13:47:50 UTC" "2017-12-04 13:47:50 UTC"
 [811] "2017-12-04 13:47:50 UTC" "2017-12-04 13:47:50 UTC"
 [813] "2017-12-04 13:47:50 UTC" "2017-12-04 13:47:50 UTC"
 [815] "2017-12-04 13:47:50 UTC" "2017-12-04 13:48:00 UTC"
 [817] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [819] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [821] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [823] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [825] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:10 UTC"
 [827] "2017-12-04 13:48:10 UTC" "2017-12-04 13:48:10 UTC"
 [829] "2017-12-04 13:48:10 UTC" "2017-12-04 13:48:10 UTC"
 [831] "2017-12-04 13:48:10 UTC" "2017-12-04 13:48:10 UTC"
 [833] "2017-12-04 13:48:10 UTC" "2017-12-04 13:48:10 UTC"
 [835] "2017-12-04 13:48:10 UTC" "2017-12-04 13:48:20 UTC"
 [837] "2017-12-04 13:48:20 UTC" "2017-12-04 13:48:20 UTC"
 [839] "2017-12-04 13:48:20 UTC" "2017-12-04 13:48:20 UTC"
 [841] "2017-12-04 13:48:20 UTC" "2017-12-04 13:48:20 UTC"
 [843] "2017-12-04 13:48:20 UTC" "2017-12-04 13:48:20 UTC"
 [845] "2017-12-04 13:48:20 UTC" "2017-12-04 13:48:30 UTC"
 [847] "2017-12-04 13:48:30 UTC" "2017-12-04 13:48:30 UTC"
 [849] "2017-12-04 13:48:30 UTC" "2017-12-04 13:48:30 UTC"
 [851] "2017-12-04 13:48:30 UTC" "2017-12-04 13:48:30 UTC"
 [853] "2017-12-04 13:48:30 UTC" "2017-12-04 13:48:30 UTC"
 [855] "2017-12-04 13:48:30 UTC" "2017-12-04 13:48:40 UTC"
 [857] "2017-12-04 13:48:40 UTC" "2017-12-04 13:48:40 UTC"
 [859] "2017-12-04 13:48:40 UTC" "2017-12-04 13:48:40 UTC"
 [861] "2017-12-04 13:48:40 UTC" "2017-12-04 13:48:40 UTC"
 [863] "2017-12-04 13:48:40 UTC" "2017-12-04 13:48:40 UTC"
 [865] "2017-12-04 13:48:40 UTC" "2017-12-04 13:48:50 UTC"
 [867] "2017-12-04 13:48:50 UTC" "2017-12-04 13:48:50 UTC"
 [869] "2017-12-04 13:48:50 UTC" "2017-12-04 13:48:50 UTC"
 [871] "2017-12-04 13:48:50 UTC" "2017-12-04 13:48:50 UTC"
 [873] "2017-12-04 13:48:50 UTC" "2017-12-04 13:48:50 UTC"
 [875] "2017-12-04 13:48:50 UTC" "2017-12-04 13:49:00 UTC"
 [877] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [879] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [881] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [883] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [885] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:10 UTC"
 [887] "2017-12-04 13:49:10 UTC" "2017-12-04 13:49:10 UTC"
 [889] "2017-12-04 13:49:10 UTC" "2017-12-04 13:49:10 UTC"
 [891] "2017-12-04 13:49:10 UTC" "2017-12-04 13:49:10 UTC"
 [893] "2017-12-04 13:49:10 UTC" "2017-12-04 13:49:10 UTC"
 [895] "2017-12-04 13:49:10 UTC" "2017-12-04 13:49:20 UTC"
 [897] "2017-12-04 13:49:20 UTC" "2017-12-04 13:49:20 UTC"
 [899] "2017-12-04 13:49:20 UTC" "2017-12-04 13:49:20 UTC"
 [901] "2017-12-04 13:49:20 UTC" "2017-12-04 13:49:20 UTC"
 [903] "2017-12-04 13:49:20 UTC" "2017-12-04 13:49:20 UTC"
 [905] "2017-12-04 13:49:20 UTC" "2017-12-04 13:49:30 UTC"
 [907] "2017-12-04 13:49:30 UTC" "2017-12-04 13:49:30 UTC"
 [909] "2017-12-04 13:49:30 UTC" "2017-12-04 13:49:30 UTC"
 [911] "2017-12-04 13:49:30 UTC" "2017-12-04 13:49:30 UTC"
 [913] "2017-12-04 13:49:30 UTC" "2017-12-04 13:49:30 UTC"
 [915] "2017-12-04 13:49:30 UTC" "2017-12-04 13:49:40 UTC"
 [917] "2017-12-04 13:49:40 UTC" "2017-12-04 13:49:40 UTC"
 [919] "2017-12-04 13:49:40 UTC" "2017-12-04 13:49:40 UTC"
 [921] "2017-12-04 13:49:40 UTC" "2017-12-04 13:49:40 UTC"
 [923] "2017-12-04 13:49:40 UTC" "2017-12-04 13:49:40 UTC"
 [925] "2017-12-04 13:49:40 UTC" "2017-12-04 13:49:50 UTC"
 [927] "2017-12-04 13:49:50 UTC" "2017-12-04 13:49:50 UTC"
 [929] "2017-12-04 13:49:50 UTC" "2017-12-04 13:49:50 UTC"
 [931] "2017-12-04 13:49:50 UTC" "2017-12-04 13:49:50 UTC"
 [933] "2017-12-04 13:49:50 UTC" "2017-12-04 13:49:50 UTC"
 [935] "2017-12-04 13:49:50 UTC" "2017-12-04 13:50:00 UTC"
 [937] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [939] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [941] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [943] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [945] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:10 UTC"
 [947] "2017-12-04 13:50:10 UTC" "2017-12-04 13:50:10 UTC"
 [949] "2017-12-04 13:50:10 UTC" "2017-12-04 13:50:10 UTC"
 [951] "2017-12-04 13:50:10 UTC" "2017-12-04 13:50:10 UTC"
 [953] "2017-12-04 13:50:10 UTC" "2017-12-04 13:50:10 UTC"
 [955] "2017-12-04 13:50:10 UTC" "2017-12-04 13:50:20 UTC"
 [957] "2017-12-04 13:50:20 UTC" "2017-12-04 13:50:20 UTC"
 [959] "2017-12-04 13:50:20 UTC" "2017-12-04 13:50:20 UTC"
 [961] "2017-12-04 13:50:20 UTC" "2017-12-04 13:50:20 UTC"
 [963] "2017-12-04 13:50:20 UTC" "2017-12-04 13:50:20 UTC"
 [965] "2017-12-04 13:50:20 UTC" "2017-12-04 13:50:30 UTC"
 [967] "2017-12-04 13:50:30 UTC" "2017-12-04 13:50:30 UTC"
 [969] "2017-12-04 13:50:30 UTC" "2017-12-04 13:50:30 UTC"
 [971] "2017-12-04 13:50:30 UTC" "2017-12-04 13:50:30 UTC"
 [973] "2017-12-04 13:50:30 UTC" "2017-12-04 13:50:30 UTC"
 [975] "2017-12-04 13:50:30 UTC" "2017-12-04 13:50:40 UTC"
 [977] "2017-12-04 13:50:40 UTC" "2017-12-04 13:50:40 UTC"
 [979] "2017-12-04 13:50:40 UTC" "2017-12-04 13:50:40 UTC"
 [981] "2017-12-04 13:50:40 UTC" "2017-12-04 13:50:40 UTC"
 [983] "2017-12-04 13:50:40 UTC" "2017-12-04 13:50:40 UTC"
 [985] "2017-12-04 13:50:40 UTC" "2017-12-04 13:50:50 UTC"
 [987] "2017-12-04 13:50:50 UTC" "2017-12-04 13:50:50 UTC"
 [989] "2017-12-04 13:50:50 UTC" "2017-12-04 13:50:50 UTC"
 [991] "2017-12-04 13:50:50 UTC" "2017-12-04 13:50:50 UTC"
 [993] "2017-12-04 13:50:50 UTC" "2017-12-04 13:50:50 UTC"
 [995] "2017-12-04 13:50:50 UTC" "2017-12-04 13:51:00 UTC"
 [997] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [999] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
> 
> # align to next whole minute
> align.time(x, 60)
   [1] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
   [3] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
   [5] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
   [7] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
   [9] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [11] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [13] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [15] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [17] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [19] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [21] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [23] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [25] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [27] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [29] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [31] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [33] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [35] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [37] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [39] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [41] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [43] "2017-12-04 13:35:00 UTC" "2017-12-04 13:35:00 UTC"
  [45] "2017-12-04 13:35:00 UTC" "2017-12-04 13:36:00 UTC"
  [47] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [49] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [51] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [53] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [55] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [57] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [59] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [61] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [63] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [65] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [67] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [69] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [71] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [73] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [75] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [77] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [79] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [81] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [83] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [85] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [87] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [89] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [91] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [93] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [95] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [97] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
  [99] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
 [101] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
 [103] "2017-12-04 13:36:00 UTC" "2017-12-04 13:36:00 UTC"
 [105] "2017-12-04 13:36:00 UTC" "2017-12-04 13:37:00 UTC"
 [107] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [109] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [111] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [113] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [115] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [117] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [119] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [121] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [123] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [125] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [127] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [129] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [131] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [133] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [135] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [137] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [139] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [141] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [143] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [145] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [147] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [149] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [151] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [153] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [155] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [157] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [159] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [161] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [163] "2017-12-04 13:37:00 UTC" "2017-12-04 13:37:00 UTC"
 [165] "2017-12-04 13:37:00 UTC" "2017-12-04 13:38:00 UTC"
 [167] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [169] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [171] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [173] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [175] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [177] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [179] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [181] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [183] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [185] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [187] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [189] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [191] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [193] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [195] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [197] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [199] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [201] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [203] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [205] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [207] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [209] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [211] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [213] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [215] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [217] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [219] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [221] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [223] "2017-12-04 13:38:00 UTC" "2017-12-04 13:38:00 UTC"
 [225] "2017-12-04 13:38:00 UTC" "2017-12-04 13:39:00 UTC"
 [227] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [229] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [231] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [233] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [235] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [237] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [239] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [241] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [243] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [245] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [247] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [249] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [251] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [253] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [255] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [257] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [259] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [261] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [263] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [265] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [267] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [269] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [271] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [273] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [275] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [277] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [279] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [281] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [283] "2017-12-04 13:39:00 UTC" "2017-12-04 13:39:00 UTC"
 [285] "2017-12-04 13:39:00 UTC" "2017-12-04 13:40:00 UTC"
 [287] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [289] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [291] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [293] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [295] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [297] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [299] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [301] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [303] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [305] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [307] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [309] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [311] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [313] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [315] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [317] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [319] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [321] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [323] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [325] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [327] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [329] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [331] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [333] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [335] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [337] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [339] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [341] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [343] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [345] "2017-12-04 13:40:00 UTC" "2017-12-04 13:41:00 UTC"
 [347] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [349] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [351] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [353] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [355] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [357] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [359] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [361] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [363] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [365] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [367] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [369] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [371] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [373] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [375] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [377] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [379] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [381] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [383] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [385] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [387] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [389] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [391] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [393] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [395] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [397] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [399] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [401] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [403] "2017-12-04 13:41:00 UTC" "2017-12-04 13:41:00 UTC"
 [405] "2017-12-04 13:41:00 UTC" "2017-12-04 13:42:00 UTC"
 [407] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [409] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [411] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [413] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [415] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [417] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [419] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [421] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [423] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [425] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [427] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [429] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [431] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [433] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [435] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [437] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [439] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [441] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [443] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [445] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [447] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [449] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [451] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [453] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [455] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [457] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [459] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [461] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [463] "2017-12-04 13:42:00 UTC" "2017-12-04 13:42:00 UTC"
 [465] "2017-12-04 13:42:00 UTC" "2017-12-04 13:43:00 UTC"
 [467] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [469] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [471] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [473] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [475] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [477] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [479] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [481] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [483] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [485] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [487] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [489] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [491] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [493] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [495] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [497] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [499] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [501] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [503] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [505] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [507] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [509] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [511] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [513] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [515] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [517] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [519] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [521] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [523] "2017-12-04 13:43:00 UTC" "2017-12-04 13:43:00 UTC"
 [525] "2017-12-04 13:43:00 UTC" "2017-12-04 13:44:00 UTC"
 [527] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [529] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [531] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [533] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [535] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [537] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [539] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [541] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [543] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [545] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [547] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [549] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [551] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [553] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [555] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [557] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [559] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [561] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [563] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [565] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [567] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [569] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [571] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [573] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [575] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [577] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [579] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [581] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [583] "2017-12-04 13:44:00 UTC" "2017-12-04 13:44:00 UTC"
 [585] "2017-12-04 13:44:00 UTC" "2017-12-04 13:45:00 UTC"
 [587] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [589] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [591] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [593] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [595] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [597] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [599] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [601] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [603] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [605] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [607] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [609] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [611] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [613] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [615] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [617] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [619] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [621] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [623] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [625] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [627] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [629] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [631] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [633] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [635] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [637] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [639] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [641] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [643] "2017-12-04 13:45:00 UTC" "2017-12-04 13:45:00 UTC"
 [645] "2017-12-04 13:45:00 UTC" "2017-12-04 13:46:00 UTC"
 [647] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [649] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [651] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [653] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [655] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [657] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [659] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [661] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [663] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [665] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [667] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [669] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [671] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [673] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [675] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [677] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [679] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [681] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [683] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [685] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [687] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [689] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [691] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [693] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [695] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [697] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [699] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [701] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [703] "2017-12-04 13:46:00 UTC" "2017-12-04 13:46:00 UTC"
 [705] "2017-12-04 13:46:00 UTC" "2017-12-04 13:47:00 UTC"
 [707] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [709] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [711] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [713] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [715] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [717] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [719] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [721] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [723] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [725] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [727] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [729] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [731] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [733] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [735] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [737] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [739] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [741] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [743] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [745] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [747] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [749] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [751] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [753] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [755] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [757] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [759] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [761] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [763] "2017-12-04 13:47:00 UTC" "2017-12-04 13:47:00 UTC"
 [765] "2017-12-04 13:47:00 UTC" "2017-12-04 13:48:00 UTC"
 [767] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [769] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [771] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [773] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [775] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [777] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [779] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [781] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [783] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [785] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [787] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [789] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [791] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [793] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [795] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [797] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [799] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [801] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [803] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [805] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [807] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [809] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [811] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [813] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [815] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [817] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [819] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [821] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [823] "2017-12-04 13:48:00 UTC" "2017-12-04 13:48:00 UTC"
 [825] "2017-12-04 13:48:00 UTC" "2017-12-04 13:49:00 UTC"
 [827] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [829] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [831] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [833] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [835] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [837] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [839] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [841] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [843] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [845] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [847] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [849] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [851] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [853] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [855] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [857] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [859] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [861] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [863] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [865] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [867] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [869] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [871] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [873] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [875] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [877] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [879] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [881] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [883] "2017-12-04 13:49:00 UTC" "2017-12-04 13:49:00 UTC"
 [885] "2017-12-04 13:49:00 UTC" "2017-12-04 13:50:00 UTC"
 [887] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [889] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [891] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [893] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [895] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [897] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [899] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [901] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [903] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [905] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [907] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [909] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [911] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [913] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [915] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [917] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [919] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [921] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [923] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [925] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [927] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [929] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [931] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [933] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [935] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [937] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [939] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [941] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [943] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [945] "2017-12-04 13:50:00 UTC" "2017-12-04 13:51:00 UTC"
 [947] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [949] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [951] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [953] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [955] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [957] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [959] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [961] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [963] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [965] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [967] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [969] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [971] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [973] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [975] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [977] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [979] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [981] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [983] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [985] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [987] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [989] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [991] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [993] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [995] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [997] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
 [999] "2017-12-04 13:51:00 UTC" "2017-12-04 13:51:00 UTC"
> 
> # align to next whole 10 min interval
> align.time(x, 10 * 60)
   [1] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
   [3] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
   [5] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
   [7] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
   [9] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [11] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [13] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [15] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [17] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [19] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [21] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [23] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [25] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [27] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [29] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [31] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [33] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [35] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [37] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [39] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [41] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [43] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [45] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [47] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [49] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [51] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [53] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [55] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [57] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [59] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [61] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [63] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [65] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [67] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [69] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [71] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [73] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [75] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [77] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [79] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [81] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [83] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [85] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [87] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [89] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [91] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [93] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [95] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [97] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
  [99] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [101] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [103] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [105] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [107] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [109] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [111] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [113] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [115] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [117] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [119] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [121] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [123] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [125] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [127] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [129] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [131] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [133] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [135] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [137] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [139] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [141] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [143] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [145] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [147] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [149] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [151] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [153] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [155] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [157] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [159] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [161] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [163] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [165] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [167] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [169] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [171] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [173] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [175] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [177] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [179] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [181] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [183] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [185] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [187] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [189] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [191] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [193] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [195] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [197] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [199] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [201] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [203] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [205] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [207] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [209] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [211] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [213] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [215] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [217] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [219] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [221] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [223] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [225] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [227] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [229] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [231] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [233] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [235] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [237] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [239] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [241] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [243] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [245] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [247] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [249] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [251] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [253] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [255] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [257] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [259] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [261] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [263] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [265] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [267] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [269] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [271] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [273] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [275] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [277] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [279] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [281] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [283] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [285] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [287] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [289] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [291] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [293] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [295] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [297] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [299] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [301] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [303] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [305] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [307] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [309] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [311] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [313] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [315] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [317] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [319] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [321] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [323] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [325] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [327] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [329] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [331] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [333] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [335] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [337] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [339] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [341] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [343] "2017-12-04 13:40:00 UTC" "2017-12-04 13:40:00 UTC"
 [345] "2017-12-04 13:40:00 UTC" "2017-12-04 13:50:00 UTC"
 [347] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [349] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [351] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [353] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [355] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [357] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [359] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [361] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [363] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [365] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [367] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [369] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [371] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [373] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [375] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [377] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [379] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [381] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [383] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [385] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [387] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [389] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [391] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [393] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [395] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [397] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [399] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [401] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [403] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [405] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [407] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [409] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [411] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [413] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [415] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [417] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [419] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [421] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [423] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [425] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [427] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [429] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [431] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [433] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [435] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [437] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [439] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [441] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [443] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [445] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [447] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [449] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [451] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [453] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [455] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [457] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [459] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [461] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [463] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [465] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [467] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [469] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [471] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [473] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [475] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [477] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [479] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [481] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [483] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [485] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [487] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [489] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [491] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [493] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [495] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [497] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [499] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [501] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [503] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [505] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [507] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [509] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [511] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [513] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [515] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [517] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [519] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [521] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [523] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [525] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [527] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [529] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [531] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [533] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [535] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [537] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [539] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [541] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [543] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [545] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [547] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [549] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [551] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [553] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [555] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [557] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [559] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [561] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [563] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [565] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [567] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [569] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [571] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [573] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [575] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [577] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [579] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [581] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [583] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [585] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [587] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [589] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [591] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [593] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [595] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [597] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [599] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [601] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [603] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [605] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [607] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [609] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [611] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [613] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [615] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [617] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [619] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [621] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [623] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [625] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [627] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [629] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [631] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [633] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [635] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [637] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [639] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [641] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [643] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [645] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [647] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [649] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [651] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [653] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [655] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [657] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [659] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [661] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [663] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [665] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [667] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [669] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [671] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [673] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [675] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [677] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [679] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [681] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [683] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [685] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [687] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [689] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [691] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [693] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [695] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [697] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [699] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [701] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [703] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [705] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [707] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [709] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [711] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [713] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [715] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [717] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [719] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [721] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [723] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [725] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [727] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [729] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [731] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [733] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [735] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [737] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [739] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [741] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [743] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [745] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [747] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [749] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [751] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [753] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [755] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [757] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [759] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [761] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [763] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [765] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [767] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [769] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [771] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [773] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [775] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [777] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [779] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [781] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [783] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [785] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [787] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [789] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [791] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [793] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [795] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [797] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [799] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [801] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [803] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [805] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [807] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [809] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [811] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [813] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [815] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [817] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [819] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [821] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [823] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [825] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [827] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [829] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [831] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [833] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [835] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [837] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [839] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [841] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [843] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [845] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [847] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [849] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [851] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [853] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [855] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [857] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [859] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [861] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [863] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [865] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [867] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [869] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [871] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [873] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [875] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [877] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [879] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [881] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [883] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [885] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [887] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [889] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [891] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [893] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [895] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [897] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [899] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [901] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [903] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [905] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [907] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [909] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [911] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [913] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [915] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [917] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [919] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [921] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [923] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [925] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [927] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [929] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [931] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [933] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [935] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [937] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [939] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [941] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [943] "2017-12-04 13:50:00 UTC" "2017-12-04 13:50:00 UTC"
 [945] "2017-12-04 13:50:00 UTC" "2017-12-04 14:00:00 UTC"
 [947] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [949] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [951] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [953] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [955] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [957] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [959] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [961] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [963] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [965] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [967] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [969] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [971] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [973] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [975] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [977] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [979] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [981] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [983] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [985] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [987] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [989] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [991] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [993] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [995] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [997] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
 [999] "2017-12-04 14:00:00 UTC" "2017-12-04 14:00:00 UTC"
> 
> 
> 
> cleanEx()
> nameEx("apply.monthly")
> ### * apply.monthly
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: apply.monthly
> ### Title: Apply Function over Calendar Periods
> ### Aliases: apply.daily apply.weekly apply.monthly apply.quarterly
> ###   apply.yearly
> ### Keywords: utilities
> 
> ### ** Examples
> 
> xts.ts <- xts(rnorm(231),as.Date(13514:13744,origin="1970-01-01"))
> 
> start(xts.ts)
> end(xts.ts)
> 
> apply.monthly(xts.ts,mean)
> apply.monthly(xts.ts,function(x) var(x))
> 
> 
> 
> cleanEx()
> nameEx("as.environment")
> ### * as.environment
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: as.environment.xts
> ### Title: Coerce an 'xts' Object to an Environment by Column
> ### Aliases: as.environment.xts
> ### Keywords: manip
> 
> ### ** Examples
> 
> x <- xts(1:10, Sys.Date()+1:10)
> colnames(x) <- "X"
> y <- xts(1:10, Sys.Date()+1:10)
> colnames(x) <- "Y"
> xy <- cbind(x,y)
> colnames(xy)
> e <- as.environment(xy)    # currently using xts-style positive k 
> ls(xy)
Warning in ls(xy) : ‘xy’ converted to character string
> ls.str(xy)
> 
> 
> 
> cleanEx()
> nameEx("as.xts.methods")
> ### * as.xts.methods
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: as.xts.methods
> ### Title: Convert Object To And From Class xts
> ### Aliases: as.xts.methods as.xts.timeSeries as.timeSeries.xts as.xts.xts
> ###   as.xts.zoo as.xts.ts as.xts.fts as.xts.data.frame as.xts.matrix
> ###   as.fts.xts
> ### Keywords: utilities
> 
> ### ** Examples
> 
>   ## Not run: 
> ##D   # timeSeries
> ##D   library(timeSeries)
> ##D   x <- timeSeries(1:10, 1:10)
> ##D 
> ##D   str( as.xts(x) )
> ##D   str( reclass(as.xts(x)) )
> ##D   str( try.xts(x) )
> ##D   str( reclass(try.xts(x)) )
> ##D   
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("axTicksByTime")
> ### * axTicksByTime
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: axTicksByTime
> ### Title: Compute x-Axis Tickmark Locations by Time
> ### Aliases: axTicksByTime
> ### Keywords: utilities
> 
> ### ** Examples
> 
> data(sample_matrix)
> axTicksByTime(as.xts(sample_matrix),'auto')
> axTicksByTime(as.xts(sample_matrix),'weeks')
> axTicksByTime(as.xts(sample_matrix),'months',7)
> 
> 
> 
> cleanEx()
> nameEx("coredata.xts")
> ### * coredata.xts
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: coredata.xts
> ### Title: Extract/Replace Core Data of an xts Object
> ### Aliases: coredata.xts xcoredata xcoredata<-
> ### Keywords: utilities
> 
> ### ** Examples
> 
> data(sample_matrix)
> x <- as.xts(sample_matrix, myattr=100)
> coredata(x)
           Open     High      Low    Close
  [1,] 50.03978 50.11778 49.95041 50.11778
  [2,] 50.23050 50.42188 50.23050 50.39767
  [3,] 50.42096 50.42096 50.26414 50.33236
  [4,] 50.37347 50.37347 50.22103 50.33459
  [5,] 50.24433 50.24433 50.11121 50.18112
  [6,] 50.13211 50.21561 49.99185 49.99185
  [7,] 50.03555 50.10363 49.96971 49.98806
  [8,] 49.99489 49.99489 49.80454 49.91333
  [9,] 49.91228 50.13053 49.91228 49.97246
 [10,] 49.88529 50.23910 49.88529 50.23910
 [11,] 50.21258 50.35980 50.17176 50.28519
 [12,] 50.32385 50.48000 50.32385 50.41286
 [13,] 50.46359 50.62395 50.46359 50.60145
 [14,] 50.61724 50.68583 50.47359 50.48912
 [15,] 50.62024 50.73731 50.56627 50.67835
 [16,] 50.74150 50.77336 50.44932 50.48644
 [17,] 50.48051 50.60712 50.40269 50.57632
 [18,] 50.41381 50.55627 50.41278 50.41278
 [19,] 50.35323 50.35323 50.02142 50.02142
 [20,] 50.16188 50.42090 50.16044 50.42090
 [21,] 50.36008 50.43875 50.21129 50.21129
 [22,] 50.03966 50.16961 50.03670 50.16961
 [23,] 50.10953 50.26942 50.06387 50.23145
 [24,] 50.20738 50.28268 50.12913 50.24334
 [25,] 50.16008 50.16008 49.94052 50.07024
 [26,] 50.06041 50.09777 49.97267 50.01091
 [27,] 49.96586 50.00217 49.87468 49.88096
 [28,] 49.85624 49.93038 49.76308 49.91875
 [29,] 49.85477 50.02180 49.77242 50.02180
 [30,] 50.07049 50.22578 50.07049 50.22578
 [31,] 50.22448 50.41376 50.19101 50.35784
 [32,] 50.44503 50.53490 50.36064 50.36928
 [33,] 50.37219 50.46912 50.29880 50.43109
 [34,] 50.48183 50.55509 50.40203 50.55509
 [35,] 50.52389 50.69783 50.45977 50.69783
 [36,] 50.71661 50.71661 50.49865 50.49865
 [37,] 50.49322 50.69693 50.49322 50.60611
 [38,] 50.58531 50.84734 50.58531 50.81383
 [39,] 50.83331 50.89683 50.67686 50.67686
 [40,] 50.68923 50.72696 50.60707 50.69562
 [41,] 50.67849 50.91776 50.67849 50.91160
 [42,] 50.88990 50.96653 50.83604 50.96653
 [43,] 50.90056 51.00299 50.87935 50.90106
 [44,] 50.95283 51.04699 50.80317 51.04699
 [45,] 51.06330 51.11401 50.94681 51.05185
 [46,] 51.12879 51.12879 51.00613 51.02164
 [47,] 50.97722 51.13653 50.95260 51.13653
 [48,] 51.18414 51.32090 51.13713 51.15151
 [49,] 51.29502 51.32342 51.13524 51.17899
 [50,] 51.13725 51.14940 50.93523 50.93523
 [51,] 50.92940 50.92940 50.69880 50.77325
 [52,] 50.72111 50.86597 50.65718 50.86597
 [53,] 50.84392 50.96946 50.73060 50.76498
 [54,] 50.78360 50.86453 50.76692 50.79534
 [55,] 50.78960 50.93187 50.78960 50.84776
 [56,] 50.88168 50.88168 50.75481 50.75481
 [57,] 50.74333 50.78909 50.61874 50.69206
 [58,] 50.69435 50.77091 50.59881 50.77091
 [59,] 50.81620 50.81620 50.56451 50.57075
 [60,] 50.60980 50.72061 50.50808 50.61559
 [61,] 50.73241 50.73241 50.40929 50.41033
 [62,] 50.39273 50.40881 50.24922 50.32636
 [63,] 50.26501 50.34050 50.26501 50.29567
 [64,] 50.27464 50.32019 50.16380 50.16380
 [65,] 50.14458 50.20278 49.91381 49.91381
 [66,] 49.93149 50.00364 49.84893 49.91839
 [67,] 49.92377 49.92377 49.74242 49.80712
 [68,] 49.79370 49.88984 49.70385 49.88698
 [69,] 49.83062 49.88295 49.76031 49.78806
 [70,] 49.82763 49.90311 49.67049 49.74033
 [71,] 49.69628 49.70863 49.37924 49.37924
 [72,] 49.36270 49.53735 49.30746 49.53735
 [73,] 49.57374 49.62310 49.39876 49.49600
 [74,] 49.44900 49.65285 49.42416 49.59500
 [75,] 49.55666 49.55666 49.33564 49.34714
 [76,] 49.29778 49.67857 49.29778 49.65463
 [77,] 49.62747 49.65407 49.51604 49.54590
 [78,] 49.59529 49.62003 49.42321 49.50690
 [79,] 49.49765 49.53961 49.41610 49.51807
 [80,] 49.42306 49.42306 49.31184 49.39687
 [81,] 49.27281 49.27281 48.93095 48.93095
 [82,] 48.86635 48.86635 48.52684 48.52684
 [83,] 48.50649 48.50649 48.33409 48.33973
 [84,] 48.34210 48.44637 48.28969 48.28969
 [85,] 48.25248 48.41572 48.23648 48.30851
 [86,] 48.33090 48.53595 48.33090 48.53595
 [87,] 48.59236 48.69988 48.57432 48.69988
 [88,] 48.74562 49.00218 48.74562 48.93546
 [89,] 48.95616 49.09728 48.95616 48.97490
 [90,] 48.94407 48.97816 48.80962 48.87032
 [91,] 48.90488 49.08400 48.90488 49.06316
 [92,] 49.06071 49.24525 48.96928 49.24525
 [93,] 49.22579 49.37335 49.19913 49.34736
 [94,] 49.41435 49.41435 49.30641 49.33776
 [95,] 49.33621 49.41900 49.33621 49.41900
 [96,] 49.45170 49.60950 49.45170 49.53819
 [97,] 49.54338 49.58968 49.41806 49.41806
 [98,] 49.44429 49.50234 49.33828 49.50234
 [99,] 49.55704 49.78776 49.55704 49.76984
[100,] 49.74550 49.81925 49.74550 49.74623
[101,] 49.75079 49.75470 49.61732 49.72996
[102,] 49.70708 49.85332 49.69245 49.73339
[103,] 49.74154 49.77340 49.70159 49.75552
[104,] 49.74707 49.79341 49.66299 49.70942
[105,] 49.74915 49.86289 49.71091 49.83886
[106,] 49.84698 49.95456 49.77754 49.95456
[107,] 49.93794 50.07208 49.92484 50.07208
[108,] 50.02441 50.02991 49.83945 49.83945
[109,] 49.76042 49.92847 49.69808 49.91103
[110,] 49.98954 50.20123 49.98954 50.20123
[111,] 50.31203 50.33781 50.24788 50.32556
[112,] 50.32009 50.32009 49.87574 49.88539
[113,] 49.87340 49.90184 49.72769 49.72769
[114,] 49.73385 49.88622 49.73385 49.88472
[115,] 49.89064 49.89064 49.74899 49.79201
[116,] 49.80530 49.80530 49.50814 49.50814
[117,] 49.54688 49.55497 49.29186 49.29186
[118,] 49.30289 49.30289 49.05676 49.13529
[119,] 49.13825 49.33974 49.11500 49.33974
[120,] 49.34572 49.52635 49.34572 49.47138
[121,] 49.47062 49.47062 49.34261 49.38521
[122,] 49.46328 49.69097 49.46328 49.58677
[123,] 49.59963 49.59963 49.41375 49.41375
[124,] 49.38428 49.40266 49.10310 49.10310
[125,] 49.16606 49.45999 49.16606 49.45999
[126,] 49.49188 49.49188 49.13572 49.13572
[127,] 49.13282 49.25507 49.13282 49.18930
[128,] 49.17739 49.17739 48.72708 48.72708
[129,] 48.83479 48.84549 48.38001 48.38001
[130,] 48.25456 48.25456 47.96904 47.96904
[131,] 47.96813 48.03286 47.89262 48.01935
[132,] 48.05550 48.05550 47.66209 47.66209
[133,] 47.64469 47.72505 47.58212 47.65930
[134,] 47.60647 47.74053 47.51796 47.72686
[135,] 47.72065 47.90717 47.70913 47.86683
[136,] 47.79430 47.79430 47.55140 47.62938
[137,] 47.65013 47.75117 47.65013 47.68423
[138,] 47.65552 47.77986 47.60536 47.60536
[139,] 47.56210 47.93085 47.56210 47.93085
[140,] 47.96582 48.02903 47.78072 47.78072
[141,] 47.81830 47.94825 47.81155 47.82946
[142,] 47.93593 48.08242 47.88763 47.90068
[143,] 47.89041 48.03077 47.88413 48.01130
[144,] 47.98234 48.17543 47.94507 48.16058
[145,] 48.14521 48.14521 47.92649 47.99613
[146,] 48.01018 48.02166 47.90193 47.90193
[147,] 47.90142 47.93398 47.64718 47.64718
[148,] 47.65665 47.89342 47.65446 47.87252
[149,] 47.78866 47.93267 47.78866 47.83291
[150,] 47.82845 47.84044 47.73780 47.73780
[151,] 47.74432 47.74432 47.54820 47.65123
[152,] 47.60223 47.74542 47.56796 47.72569
[153,] 47.71215 47.71215 47.50198 47.50198
[154,] 47.51516 47.53545 47.32342 47.37642
[155,] 47.41090 47.48217 47.21116 47.22930
[156,] 47.36581 47.41233 47.23306 47.40048
[157,] 47.42099 47.50637 47.35320 47.45262
[158,] 47.48449 47.53089 47.42814 47.48360
[159,] 47.38669 47.74770 47.38669 47.74770
[160,] 47.74899 47.74899 47.28685 47.28685
[161,] 47.27807 47.30884 47.14660 47.14660
[162,] 47.19411 47.41834 47.18153 47.41834
[163,] 47.46135 47.52004 47.43083 47.43083
[164,] 47.43279 47.43279 47.33490 47.34884
[165,] 47.33306 47.40490 47.26157 47.36779
[166,] 47.36452 47.40463 47.26056 47.26056
[167,] 47.24783 47.47249 47.24783 47.39521
[168,] 47.43470 47.56336 47.36424 47.36424
[169,] 47.46055 47.73353 47.46055 47.67220
[170,] 47.71126 47.81759 47.66843 47.66843
[171,] 47.71012 47.71012 47.61106 47.62921
[172,] 47.56849 47.59266 47.32549 47.32549
[173,] 47.22873 47.24771 47.09144 47.24771
[174,] 47.23996 47.30287 47.20932 47.22764
[175,] 47.20471 47.42772 47.13405 47.42772
[176,] 47.44300 47.61611 47.44300 47.61611
[177,] 47.62323 47.71673 47.60015 47.62769
[178,] 47.67604 47.70460 47.57241 47.60716
[179,] 47.63629 47.77563 47.61733 47.66471
[180,] 47.67468 47.94127 47.67468 47.76719
> xcoredata(x)
$index
  [1] 1167696000 1167782400 1167868800 1167955200 1168041600 1168128000
  [7] 1168214400 1168300800 1168387200 1168473600 1168560000 1168646400
 [13] 1168732800 1168819200 1168905600 1168992000 1169078400 1169164800
 [19] 1169251200 1169337600 1169424000 1169510400 1169596800 1169683200
 [25] 1169769600 1169856000 1169942400 1170028800 1170115200 1170201600
 [31] 1170288000 1170374400 1170460800 1170547200 1170633600 1170720000
 [37] 1170806400 1170892800 1170979200 1171065600 1171152000 1171238400
 [43] 1171324800 1171411200 1171497600 1171584000 1171670400 1171756800
 [49] 1171843200 1171929600 1172016000 1172102400 1172188800 1172275200
 [55] 1172361600 1172448000 1172534400 1172620800 1172707200 1172793600
 [61] 1172880000 1172966400 1173052800 1173139200 1173225600 1173312000
 [67] 1173398400 1173484800 1173571200 1173657600 1173744000 1173830400
 [73] 1173916800 1174003200 1174089600 1174176000 1174262400 1174348800
 [79] 1174435200 1174521600 1174608000 1174694400 1174780800 1174867200
 [85] 1174953600 1175040000 1175126400 1175212800 1175299200 1175385600
 [91] 1175472000 1175558400 1175644800 1175731200 1175817600 1175904000
 [97] 1175990400 1176076800 1176163200 1176249600 1176336000 1176422400
[103] 1176508800 1176595200 1176681600 1176768000 1176854400 1176940800
[109] 1177027200 1177113600 1177200000 1177286400 1177372800 1177459200
[115] 1177545600 1177632000 1177718400 1177804800 1177891200 1177977600
[121] 1178064000 1178150400 1178236800 1178323200 1178409600 1178496000
[127] 1178582400 1178668800 1178755200 1178841600 1178928000 1179014400
[133] 1179100800 1179187200 1179273600 1179360000 1179446400 1179532800
[139] 1179619200 1179705600 1179792000 1179878400 1179964800 1180051200
[145] 1180137600 1180224000 1180310400 1180396800 1180483200 1180569600
[151] 1180656000 1180742400 1180828800 1180915200 1181001600 1181088000
[157] 1181174400 1181260800 1181347200 1181433600 1181520000 1181606400
[163] 1181692800 1181779200 1181865600 1181952000 1182038400 1182124800
[169] 1182211200 1182297600 1182384000 1182470400 1182556800 1182643200
[175] 1182729600 1182816000 1182902400 1182988800 1183075200 1183161600
attr(,"tzone")
[1] ""
attr(,"tclass")
[1] "POSIXct" "POSIXt" 

$.indexCLASS
[1] "POSIXct" "POSIXt" 

$tclass
[1] "POSIXct" "POSIXt" 

$.indexTZ
[1] ""

$tzone
[1] ""

$myattr
[1] 100

$class
[1] "xts" "zoo"

> 
> 
> 
> cleanEx()
> nameEx("diff")
> ### * diff
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: diff.xts
> ### Title: Lags and Differences of xts Objects
> ### Aliases: diff.xts lag.xts lagts.xts
> ### Keywords: manip chron
> 
> ### ** Examples
> 
> x <- xts(1:10, Sys.Date()+1:10)
> lag(x)    # currently using xts-style positive k 
           [,1]
2017-12-05   NA
2017-12-06    1
2017-12-07    2
2017-12-08    3
2017-12-09    4
2017-12-10    5
2017-12-11    6
2017-12-12    7
2017-12-13    8
2017-12-14    9
> 
> lag(x, k=2)
           [,1]
2017-12-05   NA
2017-12-06   NA
2017-12-07    1
2017-12-08    2
2017-12-09    3
2017-12-10    4
2017-12-11    5
2017-12-12    6
2017-12-13    7
2017-12-14    8
> 
> lag(x, k=-1, na.pad=FALSE) # matches lag.zoo(x, k=1)
           [,1]
2017-12-05    2
2017-12-06    3
2017-12-07    4
2017-12-08    5
2017-12-09    6
2017-12-10    7
2017-12-11    8
2017-12-12    9
2017-12-13   10
> 
> diff(x)
com.oracle.truffle.r.runtime.RInternalError: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:325)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.callGroupGeneric(RCallNode.java:554)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:296)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:93)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:96)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherCachedNode.execute(CallMatcherNode.java:270)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherUninitializedNode.execute(CallMatcherNode.java:176)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$Helper.dispatch(S3DispatchFunctions.java:71)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:113)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.executeAndSpecialize(S3DispatchFunctionsFactory.java:49)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:35)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.engine.REngine$PolyglotEngineRootNode.execute(REngine.java:397)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.api.vm.PolyglotContextImpl.eval(PolyglotContextImpl.java:682)
	at org.graalvm.polyglot.Context.eval(Context.java:148)
	at com.oracle.truffle.r.launcher.RCommand.readEvalPrint(RCommand.java:271)
	at com.oracle.truffle.r.launcher.RCommand.doMain(RCommand.java:172)
	at com.oracle.truffle.r.launcher.RCommand.main(RCommand.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.oracle.graalvm.launcher.LegacyLauncher.main(stripped:20)
Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.readType(S3DispatchFunctions.java:264)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.nextMethod(S3DispatchFunctions.java:240)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$NextMethodNodeGen.execute(S3DispatchFunctionsFactory.java:95)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg3.call(RBuiltinNode.java:200)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.nodes.control.BlockNode.execute(BlockNode.java:65)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:80)
	at com.oracle.truffle.r.nodes.control.BlockNode.execute(BlockNode.java:65)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:83)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:83)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	... 86 more
Caused by: com.oracle.truffle.api.TruffleStackTrace

Frame(d=3): Ops.xts (called as: x - lag.xts(x, k = lag, na.pad = na.pad))
Frame(d=2): diff.xts (called as: diff.xts(x))
Frame(d=1): <no source> <split-99223ac> (called as: diff(x))
Frame(d=0): <repl wrapper> (called as: <invalid call>)
<empty frame>

with frame slot contents:

Frame(d=3): Ops.xts (called as: x - lag.xts(x, k = lag, na.pad = na.pad))
      .Generic = -
      .Method = [Ops.xts, Ops.xts]
      .Class = matrix
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@77a85e76
      .GenericDefEnv = null
      .Group = Ops
      e1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      e2 = [NA, 1, 2, 3, 4, 5, 6, 7, 8, 9]
      CLASS = [xts, zoo]
      Visibility = true
      1 = null
      2 = [1512432000, 1512518400, 1512604800, 1512691200, 1512777600, 1512864000, 1512950400, 1513036800,...]
Frame(d=2): diff.xts (called as: diff.xts(x))
      .Generic = diff
      .Method = diff.xts
      .Class = [xts, zoo]
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1
      .GenericDefEnv = com.oracle.truffle.r.runtime.env.frame.NSBaseMaterializedFrame@591e5fd4
      .Group = null
      x = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@2aa0feb2, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
      lag = [3, null, expr=ConstantDoubleScalarNode@70421a08, 1.0]
      differences = [1]
      arithmetic = [3, null, expr=ConstantLogicalScalarNode@bea5941, 1]
      log = [3, null, expr=ConstantLogicalScalarNode@df6f19b, 0]
      na.pad = [3, null, expr=ConstantLogicalScalarNode@6d842877, 1]
      ... = RArgsValuesAndNames: 
      Visibility = true
      TempFrameSlot = null
      zooCompat = NULL
Frame(d=1): <no source> <split-99223ac> (called as: diff(x))
      x = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@2aa0feb2, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
      ... = RArgsValuesAndNames: 
      Visibility = true
Frame(d=0): <repl wrapper> (called as: <invalid call>)
      Visibility = true
      .Random.seed = active binding
      pkgname = null
      sample_matrix = null
      sample.xts = null
      calcReturns = null
      TempFrameSlot = null
      x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      xts.ts = null
      *rhs*0 = null
      *tmp*0 = null
      y = null
<empty frame>

> diff(x, lag=1)
com.oracle.truffle.r.runtime.RInternalError: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:325)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.callGroupGeneric(RCallNode.java:554)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:189)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:93)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:96)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherCachedNode.execute(CallMatcherNode.java:270)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherUninitializedNode.execute(CallMatcherNode.java:176)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$Helper.dispatch(S3DispatchFunctions.java:71)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:113)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.executeAndSpecialize(S3DispatchFunctionsFactory.java:49)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:35)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.engine.REngine$PolyglotEngineRootNode.execute(REngine.java:397)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.api.vm.PolyglotContextImpl.eval(PolyglotContextImpl.java:682)
	at org.graalvm.polyglot.Context.eval(Context.java:148)
	at com.oracle.truffle.r.launcher.RCommand.readEvalPrint(RCommand.java:271)
	at com.oracle.truffle.r.launcher.RCommand.doMain(RCommand.java:172)
	at com.oracle.truffle.r.launcher.RCommand.main(RCommand.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.oracle.graalvm.launcher.LegacyLauncher.main(stripped:20)
Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.readType(S3DispatchFunctions.java:264)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.nextMethod(S3DispatchFunctions.java:240)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$NextMethodNodeGen.execute(S3DispatchFunctionsFactory.java:95)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg3.call(RBuiltinNode.java:200)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.nodes.control.BlockNode.execute(BlockNode.java:65)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:80)
	at com.oracle.truffle.r.nodes.control.BlockNode.execute(BlockNode.java:65)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:83)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:83)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	... 84 more
Caused by: com.oracle.truffle.api.TruffleStackTrace

Frame(d=3): Ops.xts (called as: x - lag.xts(x, k = lag, na.pad = na.pad))
Frame(d=2): diff.xts (called as: diff.xts(x, lag = 1))
Frame(d=1): <no source> <split-18887028> (called as: diff(x, lag = 1))
Frame(d=0): <repl wrapper> (called as: <invalid call>)
<empty frame>

with frame slot contents:

Frame(d=3): Ops.xts (called as: x - lag.xts(x, k = lag, na.pad = na.pad))
      .Generic = -
      .Method = [Ops.xts, Ops.xts]
      .Class = matrix
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@2c0a3826
      .GenericDefEnv = null
      .Group = Ops
      e1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      e2 = [NA, 1, 2, 3, 4, 5, 6, 7, 8, 9]
      CLASS = [xts, zoo]
      Visibility = true
      1 = null
      2 = [1512432000, 1512518400, 1512604800, 1512691200, 1512777600, 1512864000, 1512950400, 1513036800,...]
Frame(d=2): diff.xts (called as: diff.xts(x, lag = 1))
      .Generic = diff
      .Method = diff.xts
      .Class = [xts, zoo]
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1
      .GenericDefEnv = com.oracle.truffle.r.runtime.env.frame.NSBaseMaterializedFrame@591e5fd4
      .Group = null
      x = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@45f8415b, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
      lag = [2, null, expr=ConstantDoubleScalarNode@10dbf660, 1.0]
      differences = [1]
      arithmetic = [3, null, expr=ConstantLogicalScalarNode@bea5941, 1]
      log = [3, null, expr=ConstantLogicalScalarNode@df6f19b, 0]
      na.pad = [3, null, expr=ConstantLogicalScalarNode@6d842877, 1]
      ... = RArgsValuesAndNames: 
      Visibility = true
      TempFrameSlot = null
      zooCompat = NULL
Frame(d=1): <no source> <split-18887028> (called as: diff(x, lag = 1))
      x = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@45f8415b, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
      ... = RArgsValuesAndNames: lag = [2, null, expr=ConstantDoubleScalarNode@10dbf660, 1.0]
      Visibility = true
Frame(d=0): <repl wrapper> (called as: <invalid call>)
      Visibility = true
      .Random.seed = active binding
      pkgname = null
      sample_matrix = null
      sample.xts = null
      calcReturns = null
      TempFrameSlot = null
      x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      xts.ts = null
      *rhs*0 = null
      *tmp*0 = null
      y = null
<empty frame>

> diff(x, diff=2)
com.oracle.truffle.r.runtime.RInternalError: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:325)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.callGroupGeneric(RCallNode.java:554)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:296)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.ReplacementDispatchNode.voidExecute(ReplacementDispatchNode.java:77)
	at com.oracle.truffle.r.nodes.control.BlockNode.voidExecute(BlockNode.java:72)
	at com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:93)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherCachedNode.execute(CallMatcherNode.java:270)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherUninitializedNode.execute(CallMatcherNode.java:176)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$Helper.dispatch(S3DispatchFunctions.java:71)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:113)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.executeAndSpecialize(S3DispatchFunctionsFactory.java:49)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:35)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.engine.REngine$PolyglotEngineRootNode.execute(REngine.java:397)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.api.vm.PolyglotContextImpl.eval(PolyglotContextImpl.java:682)
	at org.graalvm.polyglot.Context.eval(Context.java:148)
	at com.oracle.truffle.r.launcher.RCommand.readEvalPrint(RCommand.java:271)
	at com.oracle.truffle.r.launcher.RCommand.doMain(RCommand.java:172)
	at com.oracle.truffle.r.launcher.RCommand.main(RCommand.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.oracle.graalvm.launcher.LegacyLauncher.main(stripped:20)
Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.readType(S3DispatchFunctions.java:264)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.nextMethod(S3DispatchFunctions.java:240)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$NextMethodNodeGen.execute(S3DispatchFunctionsFactory.java:95)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg3.call(RBuiltinNode.java:200)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.nodes.control.BlockNode.execute(BlockNode.java:65)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:80)
	at com.oracle.truffle.r.nodes.control.BlockNode.execute(BlockNode.java:65)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:83)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:83)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	... 89 more
Caused by: com.oracle.truffle.api.TruffleStackTrace

Frame(d=3): Ops.xts (called as: x - lag.xts(x, k = lag, na.pad = na.pad))
Frame(d=2): diff.xts (called as: diff.xts(x, diff = 2))
Frame(d=1): <no source> <split-5939f047> (called as: diff(x, diff = 2))
Frame(d=0): <repl wrapper> (called as: <invalid call>)
<empty frame>

with frame slot contents:

Frame(d=3): Ops.xts (called as: x - lag.xts(x, k = lag, na.pad = na.pad))
      .Generic = -
      .Method = [Ops.xts, Ops.xts]
      .Class = matrix
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@776e7dfb
      .GenericDefEnv = null
      .Group = Ops
      e1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      e2 = [NA, 1, 2, 3, 4, 5, 6, 7, 8, 9]
      CLASS = [xts, zoo]
      Visibility = true
      1 = null
      2 = [1512432000, 1512518400, 1512604800, 1512691200, 1512777600, 1512864000, 1512950400, 1513036800,...]
Frame(d=2): diff.xts (called as: diff.xts(x, diff = 2))
      .Generic = diff
      .Method = diff.xts
      .Class = [xts, zoo]
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1
      .GenericDefEnv = com.oracle.truffle.r.runtime.env.frame.NSBaseMaterializedFrame@591e5fd4
      .Group = null
      x = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@301d84f6, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
      lag = [3, null, expr=ConstantDoubleScalarNode@70421a08, 1.0]
      differences = [2]
      arithmetic = [3, null, expr=ConstantLogicalScalarNode@bea5941, 1]
      log = [3, null, expr=ConstantLogicalScalarNode@df6f19b, 0]
      na.pad = [3, null, expr=ConstantLogicalScalarNode@6d842877, 1]
      ... = RArgsValuesAndNames: 
      Visibility = true
      TempFrameSlot = null
      zooCompat = NULL
Frame(d=1): <no source> <split-5939f047> (called as: diff(x, diff = 2))
      x = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@301d84f6, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
      ... = RArgsValuesAndNames: diff = [2, null, expr=ConstantDoubleScalarNode@6f80cf5, 2.0]
      Visibility = true
Frame(d=0): <repl wrapper> (called as: <invalid call>)
      Visibility = true
      .Random.seed = active binding
      pkgname = null
      sample_matrix = null
      sample.xts = null
      calcReturns = null
      TempFrameSlot = null
      x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      xts.ts = null
      *rhs*0 = null
      *tmp*0 = null
      y = null
<empty frame>

> diff(diff(x))
com.oracle.truffle.r.runtime.RInternalError: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:325)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.callGroupGeneric(RCallNode.java:554)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:189)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:93)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:96)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherCachedNode.execute(CallMatcherNode.java:270)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherUninitializedNode.execute(CallMatcherNode.java:176)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$Helper.dispatch(S3DispatchFunctions.java:71)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:113)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.executeAndSpecialize(S3DispatchFunctionsFactory.java:49)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:35)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	at com.oracle.truffle.r.nodes.InlineCacheNode.doCached(InlineCacheNode.java:71)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.executeAndSpecialize(InlineCacheNodeGen.java:85)
	at com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:46)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueDefault(PromiseHelperNode.java:187)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluate(PromiseHelperNode.java:169)
	at com.oracle.truffle.r.nodes.function.PromiseHelperNode$PromiseCheckHelperNode.checkEvaluate(PromiseHelperNode.java:78)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.getEnclosingArg(S3DispatchFunctions.java:142)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:102)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.executeAndSpecialize(S3DispatchFunctionsFactory.java:49)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:35)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.engine.REngine$PolyglotEngineRootNode.execute(REngine.java:397)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.api.vm.PolyglotContextImpl.eval(PolyglotContextImpl.java:682)
	at org.graalvm.polyglot.Context.eval(Context.java:148)
	at com.oracle.truffle.r.launcher.RCommand.readEvalPrint(RCommand.java:271)
	at com.oracle.truffle.r.launcher.RCommand.doMain(RCommand.java:172)
	at com.oracle.truffle.r.launcher.RCommand.main(RCommand.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.oracle.graalvm.launcher.LegacyLauncher.main(stripped:20)
Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.readType(S3DispatchFunctions.java:264)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.nextMethod(S3DispatchFunctions.java:240)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$NextMethodNodeGen.execute(S3DispatchFunctionsFactory.java:95)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg3.call(RBuiltinNode.java:200)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:465)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:158)
	at com.oracle.truffle.r.nodes.control.BlockNode.execute(BlockNode.java:65)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:80)
	at com.oracle.truffle.r.nodes.control.BlockNode.execute(BlockNode.java:65)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:83)
	at com.oracle.truffle.r.nodes.control.IfNode.execute(IfNode.java:83)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.access.WriteVariableSyntaxNode.voidExecute(WriteVariableSyntaxNode.java:60)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:88)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	... 121 more
Caused by: com.oracle.truffle.api.TruffleStackTrace

Frame(d=4): Ops.xts (called as: x - lag.xts(x, k = lag, na.pad = na.pad))
Frame(d=3): diff.xts (called as: diff.xts(x))
Frame(d=2): <no source> <split-3d8bd881> (called as: diff(x))
Frame(d=1): <no source> <split-23358740> (called as: diff(diff(x)))
Frame(d=0): <repl wrapper> (called as: <invalid call>)
<empty frame>

with frame slot contents:

Frame(d=4): Ops.xts (called as: x - lag.xts(x, k = lag, na.pad = na.pad))
      .Generic = -
      .Method = [Ops.xts, Ops.xts]
      .Class = matrix
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@4ff0706c
      .GenericDefEnv = null
      .Group = Ops
      e1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      e2 = [NA, 1, 2, 3, 4, 5, 6, 7, 8, 9]
      CLASS = [xts, zoo]
      Visibility = true
      1 = null
      2 = [1512432000, 1512518400, 1512604800, 1512691200, 1512777600, 1512864000, 1512950400, 1513036800,...]
Frame(d=3): diff.xts (called as: diff.xts(x))
      .Generic = diff
      .Method = diff.xts
      .Class = [xts, zoo]
      .GenericCallEnv = com.oracle.truffle.r.runtime.VirtualEvalFrame$Substitute1@6968bb65
      .GenericDefEnv = com.oracle.truffle.r.runtime.env.frame.NSBaseMaterializedFrame@591e5fd4
      .Group = null
      x = [4, com.oracle.truffle.r.runtime.VirtualEvalFrame$Substitute1@6968bb65, expr=WrapArgumentNode@106802ea, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
      lag = [3, null, expr=ConstantDoubleScalarNode@70421a08, 1.0]
      differences = [1]
      arithmetic = [3, null, expr=ConstantLogicalScalarNode@bea5941, 1]
      log = [3, null, expr=ConstantLogicalScalarNode@df6f19b, 0]
      na.pad = [3, null, expr=ConstantLogicalScalarNode@6d842877, 1]
      ... = RArgsValuesAndNames: 
      Visibility = true
      TempFrameSlot = null
      zooCompat = NULL
Frame(d=2): <no source> <split-3d8bd881> (called as: diff(x))
      x = [4, com.oracle.truffle.r.runtime.VirtualEvalFrame$Substitute1@6968bb65, expr=WrapArgumentNode@106802ea, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
      ... = RArgsValuesAndNames: 
      Visibility = true
Frame(d=1): <no source> <split-23358740> (called as: diff(diff(x)))
      x = [18, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@103bcc9f, null]
      ... = RArgsValuesAndNames: 
      Visibility = null
Frame(d=0): <repl wrapper> (called as: <invalid call>)
      Visibility = true
      .Random.seed = active binding
      pkgname = null
      sample_matrix = null
      sample.xts = null
      calcReturns = null
      TempFrameSlot = null
      x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      xts.ts = null
      *rhs*0 = null
      *tmp*0 = null
      y = null
<empty frame>

> 
> 
> 
> cleanEx()
> nameEx("dimnames.xts")
> ### * dimnames.xts
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dimnames.xts
> ### Title: Dimnames of an xts Object
> ### Aliases: dimnames.xts dimnames<-.xts
> ### Keywords: misc
> 
> ### ** Examples
> 
> x <- xts(1:10, Sys.Date()+1:10)
> dimnames(x)
NULL
> rownames(x)
NULL
> rownames(x) <- 1:10
> rownames(x)
NULL
> str(x)
> 
> 
> 
> cleanEx()
> nameEx("endpoints")
> ### * endpoints
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: endpoints
> ### Title: Locate Endpoints by Time
> ### Aliases: endpoints
> ### Keywords: utilities
> 
> ### ** Examples
> 
> data(sample_matrix)
> 
> endpoints(sample_matrix)
[1]   0  30  58  89 119 150 180
> endpoints(sample_matrix, 'weeks')
 [1]   0   6  13  20  27  34  41  48  55  62  69  76  83  90  97 104 111 118 125
[20] 132 139 146 153 160 167 174 180
> 
> 
> 
> cleanEx()
> nameEx("first")
> ### * first
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: first
> ### Title: Return First or Last n Elements of A Data Object
> ### Aliases: first first.default first.xts last last.default last.xts
> ### Keywords: utilities
> 
> ### ** Examples
> 
> first(1:100)
[1] 1
> last(1:100)
[1] 100
> 
> data(LakeHuron)
> first(LakeHuron,10)
 [1] 580.38 581.86 580.97 580.80 579.79 580.39 580.42 580.82 581.40 581.32
> last(LakeHuron)
[1] 579.96
> 
> x <- xts(1:100, Sys.Date()+1:100)
> first(x, 10)
> first(x, '1 day')
> first(x, '4 days')
> first(x, 'month')
> last(x, '2 months')
> last(x, '6 weeks')
> 
> 
> 
> cleanEx()
> nameEx("firstof")
> ### * firstof
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: firstof
> ### Title: Create a POSIXct Object
> ### Aliases: firstof lastof
> ### Keywords: utilities
> 
> ### ** Examples
> 
> firstof(2000)
[1] NA
> firstof(2005,01,01)
[1] NA
> 
> lastof(2007)
[1] NA
> lastof(2007,10)
[1] NA
> 
> 
> 
> cleanEx()
> nameEx("indexClass")
> ### * indexClass
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: indexClass
> ### Title: Extracting/Replacing the Class of an xts Index
> ### Aliases: indexClass tclass indexFormat convertIndex indexClass<-
> ###   tclass<- indexFormat<- index.xts index<-.xts .indexhour .indexsec
> ###   .indexmin .indexyear .indexymon .indexyday .indexday .indexDate
> ###   .indexmday .indexwday .indexweek .indexmon .index .index<-
> ### Keywords: utilities
> 
> ### ** Examples
> 
> x <- timeBasedSeq('2010-01-01/2010-01-02 12:00')
> x <- xts(1:length(x), x)
> 
> # all obs. in the first 6 and last 3 minutes of the
> # 8th and 15th hours on each day
> x[.indexhour(x) %in% c(8,15) & .indexmin(x) %in% c(0:5,57:59)]
Warning in structure(xx, class = c("POSIXct", "POSIXt"), tzone = tz) :
  Calling 'structure(NULL, *)' is deprecated, as NULL cannot have attributes.
  Consider 'structure(list(), *)' instead.
> 
> # change the index format
> indexFormat(x) <- "%Y-%b-%d %H:%M:%OS3"
> head(x)
$from
[1] NA

$to
[1] NA

$by
[1] "mins"

$length.out
[1] 1

> 
> 
> 
> 
> cleanEx()
> nameEx("indexTZ")
> ### * indexTZ
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: indexTZ
> ### Title: Query the TimeZone of an xts object
> ### Aliases: TimeZone indexTZ indexTZ<- tzone tzone<-
> ### Keywords: misc
> 
> ### ** Examples
> 
> x <- xts(1:10, Sys.Date()+1:10)
> indexTZ(x)
[1] "UTC"
> 
> # same, preferred as of 0.9-1
> tzone(x)
[1] "UTC"
> str(x)
> x
           [,1]
2017-12-05    1
2017-12-06    2
2017-12-07    3
2017-12-08    4
2017-12-09    5
2017-12-10    6
2017-12-11    7
2017-12-12    8
2017-12-13    9
2017-12-14   10
> # now set TZ to something different...
> ## Not run: 
> ##D Old.TZ <- Sys.getenv("TZ")
> ##D Sys.setenv(TZ="America/Chicago")
> ##D x
> ##D Sys.setenv(TZ=Old.TZ)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("isOrdered")
> ### * isOrdered
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: isOrdered
> ### Title: Check If A Vector Is Ordered
> ### Aliases: isOrdered
> ### Keywords: misc
> 
> ### ** Examples
> 
> # strictly increasing
> isOrdered(1:10, increasing=TRUE)
[1] TRUE
> isOrdered(1:10, increasing=FALSE)
[1] FALSE
> isOrdered(c(1,1:10), increasing=TRUE)
[1] FALSE
> isOrdered(c(1,1:10), increasing=TRUE, strictly=FALSE)
[1] TRUE
> 
> # decreasing
> isOrdered(10:1, increasing=TRUE)
[1] FALSE
> isOrdered(10:1, increasing=FALSE)
[1] TRUE
> 
> 
> 
> 
> cleanEx()
> nameEx("make.index.unique")
> ### * make.index.unique
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: make.index.unique
> ### Title: Force Time Values To Be Unique
> ### Aliases: make.index.unique make.time.unique is.index.unique
> ###   is.time.unique
> ### Keywords: ts
> 
> ### ** Examples
> 
> 
> ds <- options(digits.secs=6) # so we can see the change
> 
> x <- xts(1:10, as.POSIXct("2011-01-21") + c(1,1,1,2:8)/1e3)
> x
           [,1]
2011-01-21    1
2011-01-21    2
2011-01-21    3
2011-01-21    4
2011-01-21    5
2011-01-21    6
2011-01-21    7
2011-01-21    8
2011-01-21    9
2011-01-21   10
> make.index.unique(x)
com.oracle.truffle.r.runtime.RInternalError: java.lang.NullPointerException
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:325)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherCachedNode.execute(CallMatcherNode.java:270)
	at com.oracle.truffle.r.nodes.function.CallMatcherNode$CallMatcherUninitializedNode.execute(CallMatcherNode.java:176)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$Helper.dispatch(S3DispatchFunctions.java:71)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:113)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.executeAndSpecialize(S3DispatchFunctionsFactory.java:49)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:35)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.engine.REngine$PolyglotEngineRootNode.execute(REngine.java:397)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.api.vm.PolyglotContextImpl.eval(PolyglotContextImpl.java:682)
	at org.graalvm.polyglot.Context.eval(Context.java:148)
	at com.oracle.truffle.r.launcher.RCommand.readEvalPrint(RCommand.java:271)
	at com.oracle.truffle.r.launcher.RCommand.doMain(RCommand.java:172)
	at com.oracle.truffle.r.launcher.RCommand.main(RCommand.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.oracle.graalvm.launcher.LegacyLauncher.main(stripped:20)
Caused by: java.lang.NullPointerException
	at com.oracle.truffle.r.runtime.Utils.intern(Utils.java:691)
	at com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_setAttrib(JavaUpCallsRFFIImpl.java:316)
	at com.oracle.truffle.r.ffi.impl.upcalls.Rf_setAttribCall$Rf_setAttribCallFactory$1.execute(Rf_setAttribCall.java:57)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callInlined(OptimizedCallTarget.java:208)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.api.interop.InteropAccessNode.doCached(InteropAccessNode.java:186)
	at com.oracle.truffle.api.interop.InteropAccessNodeGen.executeImpl(InteropAccessNodeGen.java:35)
	at com.oracle.truffle.api.interop.InteropAccessNode.execute(InteropAccessNode.java:67)
	at com.oracle.truffle.api.interop.ForeignAccess.send(ForeignAccess.java:198)
	at com.oracle.truffle.nfi.LibFFIClosure$CallClosureNode.execute(LibFFIClosure.java:143)
	at com.oracle.truffle.nfi.LibFFIClosure$ObjectRetClosureRootNode.execute(LibFFIClosure.java:202)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.nfi.NFIContext.executePrimitive(Native Method)
	at com.oracle.truffle.nfi.NFIContext.executePrimitive(NFIContext.java:259)
	at com.oracle.truffle.nfi.LibFFISignature.execute(LibFFISignature.java:169)
	at com.oracle.truffle.nfi.LibFFIFunctionMessageResolution$CachedExecuteNode.cachedSignature(LibFFIFunctionMessageResolution.java:73)
	at com.oracle.truffle.nfi.LibFFIFunctionMessageResolutionFactory$CachedExecuteNodeGen.executeAndSpecialize(LibFFIFunctionMessageResolutionFactory.java:93)
	at com.oracle.truffle.nfi.LibFFIFunctionMessageResolutionFactory$CachedExecuteNodeGen.execute(LibFFIFunctionMessageResolutionFactory.java:57)
	at com.oracle.truffle.nfi.LibFFIFunctionMessageResolution$ExecuteLibFFIFunctionNode.access(LibFFIFunctionMessageResolution.java:184)
	at com.oracle.truffle.nfi.LibFFIFunctionMessageResolutionForeign$ExecuteLibFFIFunctionSubNode.accessWithTarget(LibFFIFunctionMessageResolutionForeign.java:118)
	at com.oracle.truffle.nfi.LibFFIFunctionMessageResolutionForeignFactory$ExecuteLibFFIFunctionSubNodeGen.executeAndSpecialize(LibFFIFunctionMessageResolutionForeignFactory.java:58)
	at com.oracle.truffle.nfi.LibFFIFunctionMessageResolutionForeignFactory$ExecuteLibFFIFunctionSubNodeGen.executeWithTarget(LibFFIFunctionMessageResolutionForeignFactory.java:42)
	at com.oracle.truffle.nfi.LibFFIFunctionMessageResolutionForeign$ExecuteLibFFIFunctionSubNode$EXECUTERootNode.execute(LibFFIFunctionMessageResolutionForeign.java:135)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.api.interop.InteropAccessNode.doCached(InteropAccessNode.java:186)
	at com.oracle.truffle.api.interop.InteropAccessNodeGen.executeAndSpecialize(InteropAccessNodeGen.java:80)
	at com.oracle.truffle.api.interop.InteropAccessNodeGen.executeImpl(InteropAccessNodeGen.java:45)
	at com.oracle.truffle.api.interop.InteropAccessNode.execute(InteropAccessNode.java:67)
	at com.oracle.truffle.api.interop.ForeignAccess.sendExecute(ForeignAccess.java:389)
	at com.oracle.truffle.r.ffi.impl.nfi.TruffleNFI_Call$TruffleNFI_InvokeCallNode.invokeCallCached(TruffleNFI_Call.java:98)
	at com.oracle.truffle.r.ffi.impl.nfi.TruffleNFI_CallFactory$TruffleNFI_InvokeCallNodeGen.executeAndSpecialize(TruffleNFI_CallFactory.java:96)
	at com.oracle.truffle.r.ffi.impl.nfi.TruffleNFI_CallFactory$TruffleNFI_InvokeCallNodeGen.execute(TruffleNFI_CallFactory.java:57)
	at com.oracle.truffle.r.runtime.ffi.CallRFFI$InvokeCallNode.dispatch(CallRFFI.java:40)
	at com.oracle.truffle.r.nodes.builtin.base.foreign.CallAndExternalFunctions$DotCall.callNamedFunctionWithPackage(CallAndExternalFunctions.java:688)
	at com.oracle.truffle.r.nodes.builtin.base.foreign.CallAndExternalFunctionsFactory$DotCallNodeGen.executeAndSpecialize(CallAndExternalFunctionsFactory.java:258)
	at com.oracle.truffle.r.nodes.builtin.base.foreign.CallAndExternalFunctionsFactory$DotCallNodeGen.execute(CallAndExternalFunctionsFactory.java:148)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg3.call(RBuiltinNode.java:200)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.control.IfNode.visibleExecute(IfNode.java:93)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	... 65 more
Caused by: com.oracle.truffle.api.TruffleStackTrace

Frame(d=2): <no source> (called as: make.index.unique.xts(x))
Frame(d=1): <no source> <split-191b44ca> (called as: make.index.unique(x))
Frame(d=0): <repl wrapper> (called as: <invalid call>)
<empty frame>

with frame slot contents:

Frame(d=2): <no source> (called as: make.index.unique.xts(x))
      .Generic = make.index.unique
      .Method = make.index.unique.xts
      .Class = [xts, zoo]
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1
      .GenericDefEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@2c4cf7eb
      .Group = null
      x = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@37753b69, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
      eps = [3, null, expr=ConstantDoubleScalarNode@78d61f17, 1.0E-6]
      drop = [3, null, expr=ConstantLogicalScalarNode@4cfe9594, 0]
      fromLast = [3, null, expr=ConstantLogicalScalarNode@60861e5d, 0]
      ... = RArgsValuesAndNames: 
      Visibility = true
Frame(d=1): <no source> <split-191b44ca> (called as: make.index.unique(x))
      x = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@37753b69, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
      eps = [3, null, expr=ConstantDoubleScalarNode@602c167e, 1.0E-6]
      drop = [3, null, expr=ConstantLogicalScalarNode@74c04377, 0]
      fromLast = [3, null, expr=ConstantLogicalScalarNode@10d49900, 0]
      ... = RArgsValuesAndNames: 
      Visibility = true
Frame(d=0): <repl wrapper> (called as: <invalid call>)
      Visibility = true
      .Random.seed = active binding
      pkgname = null
      sample_matrix = null
      sample.xts = null
      calcReturns = null
      TempFrameSlot = null
      x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      xts.ts = null
      *rhs*0 = null
      *tmp*0 = null
      y = null
      LakeHuron = null
      ds = [NULL]
<empty frame>

> 
> options(ds)
$digits.secs
[1] 6

> 
> 
> 
> cleanEx()
> nameEx("merge")
> ### * merge
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: merge.xts
> ### Title: Merge xts Objects
> ### Aliases: merge.xts cbind.xts
> ### Keywords: manip utilities
> 
> ### ** Examples
> 
> (x <- xts(4:10, Sys.Date()+4:10))
           [,1]
2017-12-08    4
2017-12-09    5
2017-12-10    6
2017-12-11    7
2017-12-12    8
2017-12-13    9
2017-12-14   10
> (y <- xts(1:6, Sys.Date()+1:6))
           [,1]
2017-12-05    1
2017-12-06    2
2017-12-07    3
2017-12-08    4
2017-12-09    5
2017-12-10    6
> 
> merge(x,y)
> merge(x,y, join='inner')
> merge(x,y, join='left')
> merge(x,y, join='right')
> 
> merge.zoo(zoo(x),zoo(y),zoo(x), all=c(TRUE, FALSE, TRUE))
           zoo(x) zoo(y) zoo(x)
2017-12-08      4      4      4
2017-12-09      5      5      5
2017-12-10      6      6      6
2017-12-11      7     NA      7
2017-12-12      8     NA      8
2017-12-13      9     NA      9
2017-12-14     10     NA     10
> merge(merge(x,x),y,join='left')[,c(1,3,2)]
> 
> # zero-width objects (only index values) can be used
> xi <- xts( , index(x))
> merge(y, xi)
> 
> 
> 
> cleanEx()
> nameEx("na.locf.xts")
> ### * na.locf.xts
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: na.locf.xts
> ### Title: Last Observation Carried Forward
> ### Aliases: na.locf.xts
> ### Keywords: misc
> 
> ### ** Examples
> 
> x <- xts(1:10, Sys.Date()+1:10)
> x[c(1,2,5,9,10)] <- NA
com.oracle.truffle.r.runtime.RInternalError: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:325)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:59)
	at com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1073)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.callInternalGeneric(RCallNode.java:332)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:252)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	at com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	at com.oracle.truffle.r.nodes.control.ReplacementNode$GenericReplacementNode.executeReplacement(ReplacementNode.java:431)
	at com.oracle.truffle.r.nodes.control.ReplacementNode$ReplacementWithRhsNode.execute(ReplacementNode.java:200)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.ReplacementDispatchNode.visibleExecute(ReplacementDispatchNode.java:90)
	at com.oracle.truffle.r.engine.REngine$AnonymousRootNode.execute(REngine.java:595)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:196)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.callProxy(OptimizedDirectCallNode.java:65)
	at org.graalvm.compiler.truffle.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:59)
	at com.oracle.truffle.r.engine.REngine$PolyglotEngineRootNode.execute(REngine.java:397)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:248)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:237)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:227)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:212)
	at org.graalvm.compiler.truffle.OptimizedCallTarget.call(OptimizedCallTarget.java:190)
	at com.oracle.truffle.api.vm.PolyglotContextImpl.eval(PolyglotContextImpl.java:682)
	at org.graalvm.polyglot.Context.eval(Context.java:148)
	at com.oracle.truffle.r.launcher.RCommand.readEvalPrint(RCommand.java:271)
	at com.oracle.truffle.r.launcher.RCommand.doMain(RCommand.java:172)
	at com.oracle.truffle.r.launcher.RCommand.main(RCommand.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.oracle.graalvm.launcher.LegacyLauncher.main(stripped:20)
Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to com.oracle.truffle.r.runtime.data.RStringVector
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.readType(S3DispatchFunctions.java:264)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$NextMethod.nextMethod(S3DispatchFunctions.java:240)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$NextMethodNodeGen.executeAndSpecialize(S3DispatchFunctionsFactory.java:121)
	at com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$NextMethodNodeGen.execute(S3DispatchFunctionsFactory.java:99)
	at com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg3.call(RBuiltinNode.java:200)
	at com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1016)
	at com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:797)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.executeAndSpecialize(RCallNodeGen.java:510)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:475)
	at com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:245)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.executeAndSpecialize(RCallNodeGen.java:222)
	at com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:206)
	at com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:58)
	at com.oracle.truffle.r.nodes.control.BlockNode.visibleExecute(BlockNode.java:90)
	at com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:287)
	... 45 more
Caused by: com.oracle.truffle.api.TruffleStackTrace

Frame(d=1): [<-.xts (called as: x[c(1, 2, 5, 9, 10)] <- NA)
Frame(d=0): <repl wrapper> (called as: <invalid call>)
<empty frame>

with frame slot contents:

Frame(d=1): [<-.xts (called as: x[c(1, 2, 5, 9, 10)] <- NA)
      .Generic = [<-
      .Method = [<-.xts
      .Class = matrix
      .GenericCallEnv = org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1
      .GenericDefEnv = null
      .Group = null
      x = [2, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@2954c429, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
      i = [1, 2, 5, 9, 10]
      j = missing
      value = [4, org.graalvm.compiler.truffle.FrameWithoutBoxing@59b98ad1, expr=WrapArgumentNode@4742466e, null]
      Visibility = true
      TempFrameSlot = null
Frame(d=0): <repl wrapper> (called as: <invalid call>)
      Visibility = true
      .Random.seed = active binding
      pkgname = null
      sample_matrix = null
      sample.xts = null
      calcReturns = null
      TempFrameSlot = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      xts.ts = null
      *rhs*0 = -1
      *tmp*0 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      y = null
      LakeHuron = null
      ds = null
      xi = null
      TempFrameSlot = null
<empty frame>

> 
> x
           [,1]
2017-12-05    1
2017-12-06    2
2017-12-07    3
2017-12-08    4
2017-12-09    5
2017-12-10    6
2017-12-11    7
2017-12-12    8
2017-12-13    9
2017-12-14   10
> na.locf(x)
 [1]  1  2  3  4  5  6  7  8  9 10
> na.locf(x, fromLast=TRUE)
 [1]  1  2  3  4  5  6  7  8  9 10
> na.locf(x, na.rm=TRUE, fromLast=TRUE)
 [1]  1  2  3  4  5  6  7  8  9 10
> 
> 
> 
> cleanEx()
> nameEx("ndays")
> ### * ndays
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ndays
> ### Title: Number of Periods in Data
> ### Aliases: nseconds nminutes nhours ndays nweeks nmonths nquarters nyears
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Not run: 
> ##D getSymbols("QQQQ")
> ##D 
> ##D ndays(QQQQ)
> ##D nweeks(QQQQ)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("parseISO8601")
> ### * parseISO8601
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: .parseISO8601
> ### Title: Internal ISO 8601:2004(e) Time Parser
> ### Aliases: ISO8601 parseISO8601 makeISO8601 .parseISO8601 .makeISO8601
> ### Keywords: utilities
> 
> ### ** Examples
> 
> # the start and end of 2000
> .parseISO8601('2000')
$first.time
[1] NA

$last.time
[1] NA

> 
> # the start of 2000 and end of 2001
> .parseISO8601('2000/2001')
$first.time
[1] NA

$last.time
[1] NA

> 
> # May 1, 2000 to Dec 31, 2001
> .parseISO8601('2000-05/2001')
$first.time
[1] NA

$last.time
[1] NA

> 
> # May 1, 2000 to end of Feb 2001
> .parseISO8601('2000-05/2001-02')
$first.time
[1] NA

$last.time
[1] NA

> 
> # Jan 1, 2000 to Feb 29, 2000; note the truncated time on the LHS
> .parseISO8601('2000-01/02')
$first.time
[1] NA

$last.time
[1] NA

> 
> # 8:30 to 15:00 (used in xts subsetting to extract recurring times)
> .parseISO8601('T08:30/T15:00')
$first.time
[1] NA

$last.time
[1] NA

> 
> 
> 
> cleanEx()
> nameEx("period.apply")
> ### * period.apply
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: period.apply
> ### Title: Apply Function Over Specified Interval
> ### Aliases: period.apply
> ### Keywords: utilities
> 
> ### ** Examples
> 
> zoo.data <- zoo(rnorm(31)+10,as.Date(13514:13744,origin="1970-01-01"))
> ep <- endpoints(zoo.data,'weeks')
> period.apply(zoo.data, INDEX=ep, FUN=function(x) mean(x))
> period.apply(zoo.data, INDEX=ep, FUN=mean)                  #same
> 
> glue <- function(x) { paste(x,collapse='') }
> period.apply(letters,c(0,5,7,26),glue)
     [,1]                 
[1,] "abcde"              
[2,] "fg"                 
[3,] "hijklmnopqrstuvwxyz"
> 
> 
> 
> cleanEx()
> nameEx("period.max")
> ### * period.max
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: period.max
> ### Title: Calculate Max By Period
> ### Aliases: period.max
> ### Keywords: utilities
> 
> ### ** Examples
> 
> period.max(c(1,1,4,2,2,6,7,8,-1,20),c(0,3,5,8,10))
 3  5  8 10 
 4  2  8 20 
> 
> data(sample_matrix)
> period.max(sample_matrix[,1],endpoints(sample_matrix))
      30       58       89      119      150      180 
50.74150 51.29502 50.81620 50.32009 49.59963 47.74899 
> period.max(as.xts(sample_matrix)[,1],endpoints(sample_matrix))
               [,1]
2007-01-31 50.74150
2007-02-28 51.29502
2007-03-31 50.81620
2007-04-30 50.32009
2007-05-31 49.59963
2007-06-30 47.74899
> 
> 
> 
> cleanEx()
> nameEx("period.min")
> ### * period.min
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: period.min
> ### Title: Calculate Min By Period
> ### Aliases: period.min
> ### Keywords: utilities
> 
> ### ** Examples
> 
> period.min(c(1,1,4,2,2,6,7,8,-1,20),c(0,3,5,8,10))
 3  5  8 10 
 1  2  6 -1 
> 
> data(sample_matrix)
> period.min(sample_matrix[,1],endpoints(sample_matrix))
      30       58       89      119      150      180 
49.85477 50.22448 48.25248 48.90488 47.56210 47.19411 
> period.min(as.xts(sample_matrix)[,1],endpoints(sample_matrix))
               [,1]
2007-01-31 49.85477
2007-02-28 50.22448
2007-03-31 48.25248
2007-04-30 48.90488
2007-05-31 47.56210
2007-06-30 47.19411
> 
> 
> 
> cleanEx()
> nameEx("period.prod")
> ### * period.prod
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: period.prod
> ### Title: Calculate Product By Period
> ### Aliases: period.prod
> ### Keywords: utilities
> 
> ### ** Examples
> 
> period.prod(c(1,1,4,2,2,6,7,8,-1,20),c(0,3,5,8,10))
  3   5   8  10 
  4   4 336 -20 
> 
> data(sample_matrix)
> period.prod(sample_matrix[,1],endpoints(sample_matrix))
          30           58           89          119          150          180 
1.056649e+51 5.757944e+47 3.468070e+52 7.433317e+50 1.608181e+52 1.969971e+50 
> period.prod(as.xts(sample_matrix)[,1],endpoints(sample_matrix))
                   [,1]
2007-01-31 1.056649e+51
2007-02-28 5.757944e+47
2007-03-31 3.468070e+52
2007-04-30 7.433317e+50
2007-05-31 1.608181e+52
2007-06-30 1.969971e+50
> 
> 
> 
> cleanEx()
> nameEx("period.sum")
> ### * period.sum
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: period.sum
> ### Title: Calculate Sum By Period
> ### Aliases: period.sum
> ### Keywords: utilities
> 
> ### ** Examples
> 
> period.sum(c(1,1,4,2,2,6,7,8,-1,20),c(0,3,5,8,10))
 3  5  8 10 
 6  4 21 19 
> 
> data(sample_matrix)
> period.sum(sample_matrix[,1],endpoints(sample_matrix))
      30       58       89      119      150      180 
1506.342 1421.960 1535.487 1488.806 1497.902 1424.315 
> period.sum(as.xts(sample_matrix)[,1],endpoints(sample_matrix))
               [,1]
2007-01-31 1506.342
2007-02-28 1421.960
2007-03-31 1535.487
2007-04-30 1488.806
2007-05-31 1497.902
2007-06-30 1424.315
> 
> 
> 
> cleanEx()
> nameEx("periodicity")
> ### * periodicity
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: periodicity
> ### Title: Approximate Series Periodicity
> ### Aliases: periodicity
> ### Keywords: utilities
> 
> ### ** Examples
> 
> zoo.ts <- zoo(rnorm(231),as.Date(13514:13744,origin="1970-01-01"))
> periodicity(zoo.ts)
> 
> 
> 
> cleanEx()
> nameEx("plot.xts")
> ### * plot.xts
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot.xts
> ### Title: Plotting xts Objects
> ### Aliases: plot.xts lines.xts points.xts
> 
> ### ** Examples
> 
> ## Not run: 
> ##D data(sample_matrix)
> ##D sample.xts <- as.xts(sample_matrix)
> ##D 
> ##D # plot the Close
> ##D plot(sample.xts[,"Close"])
> ##D 
> ##D # plot a subset of the data
> ##D plot(sample.xts[,"Close"], subset="2007-04-01/2007-06-31")
> ##D 
> ##D # function to compute simple returns
> ##D simple.ret <- function(x, col.name){
> ##D   x[,col.name] / lag(x[,col.name]) - 1
> ##D }
> ##D 
> ##D # plot the close and add a panel with the simple returns
> ##D plot(sample.xts[,"Close"])
> ##D R <- simple.ret(sample.xts, "Close")
> ##D lines(R, type="h", on=NA)
> ##D 
> ##D # add the 50 period simple moving average to panel 1 of the plot
> ##D library(TTR)
> ##D lines(SMA(sample.xts[,"Close"], n = 50), on=1, col="blue")
> ##D 
> ##D # add month end points to the chart
> ##D points(sample.xts[endpoints(sample.xts[,"Close"], on = "months"), "Close"], 
> ##D        col="red", pch=17, on=1)
> ##D 
> ##D # add legend to panel 1
> ##D addLegend("topright", on=1, 
> ##D           legend.names = c("Close", "SMA(50)"), 
> ##D           lty=c(1, 1), lwd=c(2, 1),
> ##D           col=c("black", "blue", "red"))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("rbind.xts")
> ### * rbind.xts
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rbind.xts
> ### Title: Concatenate Two or More xts Objects by Row
> ### Aliases: rbind.xts c.xts
> ### Keywords: utilities
> 
> ### ** Examples
> 
> x <- xts(1:10, Sys.Date()+1:10)
> str(x)
> 
> merge(x,x)
> rbind(x,x)
unimplemented Rf_allocList
